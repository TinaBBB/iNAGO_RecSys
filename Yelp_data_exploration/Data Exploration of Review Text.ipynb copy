{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from ast import literal_eval\n",
    "from os import listdir\n",
    "from os.path import isfile, join\n",
    "from scipy.sparse import csr_matrix, load_npz, save_npz\n",
    "\n",
    "import seaborn as sns\n",
    "import datetime\n",
    "import json\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import time\n",
    "import yaml"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "with open('CountVectorize0.txt','r') as f:\n",
    "    vocab = f.read().splitlines() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "x = load_npz('Rtrain.npz')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data Exploration on Yelp Review Text \n",
    "\n",
    "I separated the data into 10 slices, each with around 600,000 pieces of review, following data exploration are done based on one of the slices\n",
    "\n",
    "## Facts of the data\n",
    "1. Among the 600,000 reviews, average length is 100 words, max=1000 and min=1\n",
    "2. Example cleaned up texts (stopwords,normalization) can be seen below\n",
    "3. Among single-word, bi-gram, tri-grams, tri-grams make most sense but top frequent words are all positive\n",
    "4. Result of TF-IDF makes sense but might not be good enough, especially when the texts are short\n",
    "\n",
    "## Next Steps \n",
    "1. Other than TF-IDF, explore some other methods\n",
    "2. Personalized explanation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    599699.000000\n",
       "mean        103.220747\n",
       "std         100.661793\n",
       "min           1.000000\n",
       "25%          40.000000\n",
       "50%          72.000000\n",
       "75%         129.000000\n",
       "max        1062.000000\n",
       "Name: word_count, dtype: float64"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Data Description\n",
    "dataset.word_count.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'amazing time busy service great employee making team effort acknowledge every guest engaging ate bar feel gave u better experience first timer ordered item absolutely loved every single one fish entree oyster rockefeller favorite food came one time love wait long food busy night still come presentable taste amazing get chance try sushi coming back girlfriend saw post see soon\\n'"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Example Cleaned up texts\n",
    "with open('cleaned_corpus0.txt', 'r') as f:\n",
    "    corpus = f.readlines()\n",
    "corpus[100]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": true,
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# Tri-grams\n",
    "trigram_freq = pd.read_pickle('top3freq_words.pkl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.text.Text at 0x1c0b72e8>,\n",
       " <matplotlib.text.Text at 0x1c0c4668>,\n",
       " <matplotlib.text.Text at 0x1c298ba8>,\n",
       " <matplotlib.text.Text at 0x1c2a4240>,\n",
       " <matplotlib.text.Text at 0x1c2a4898>,\n",
       " <matplotlib.text.Text at 0x1c2a4ef0>,\n",
       " <matplotlib.text.Text at 0x1c2b0588>,\n",
       " <matplotlib.text.Text at 0x1c2b0be0>,\n",
       " <matplotlib.text.Text at 0x1c2bd278>,\n",
       " <matplotlib.text.Text at 0x1c2bd8d0>,\n",
       " <matplotlib.text.Text at 0x1c2bdf28>,\n",
       " <matplotlib.text.Text at 0x1c2c95c0>,\n",
       " <matplotlib.text.Text at 0x1c2c9c18>,\n",
       " <matplotlib.text.Text at 0x1c2d52b0>,\n",
       " <matplotlib.text.Text at 0x1c2d5908>,\n",
       " <matplotlib.text.Text at 0x1c2d5f60>,\n",
       " <matplotlib.text.Text at 0x1c3245f8>,\n",
       " <matplotlib.text.Text at 0x1c324c50>,\n",
       " <matplotlib.text.Text at 0x1c32f2e8>,\n",
       " <matplotlib.text.Text at 0x1c32f940>]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "#Barplot of most freq Tri-grams\n",
    "\n",
    "sns.set(rc={'figure.figsize':(13,8)})\n",
    "j=sns.barplot(x=\"Tri-gram\", y=\"Freq\", data=trigram_freq[:20])\n",
    "j.set_xticklabels(j.get_xticklabels(), rotation=45)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Example of tf-idf \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Short Text with positive reviews, can recognize it's a positive review"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "emerald club member number year always satisfied vehicle customer service recent visit pittsburgh exception\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "{u'club': 0.257,\n",
       " u'exception': 0.322,\n",
       " u'member': 0.261,\n",
       " u'number': 0.239,\n",
       " u'pittsburgh': 0.286,\n",
       " u'recent': 0.29,\n",
       " u'recent visit': 0.368,\n",
       " u'satisfied': 0.259,\n",
       " u'vehicle': 0.273,\n",
       " u'year always': 0.33}"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "print corpus[10]\n",
    "tfidf_keyword(cleaned_corpus[10], X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{u'business_id': u'yFumR3CWzpfvTH2FCthvVw',\n",
       " u'cool': 0,\n",
       " u'date': u'2016-06-15',\n",
       " u'funny': 0,\n",
       " u'review_id': u'STiFMww2z31siPY7BWNC2g',\n",
       " u'stars': 5,\n",
       " u'text': u'I have been an Emerald Club member for a number of years.  I have always been very satisfied with their vehicles and customer service.  This recent visit to Pittsburgh was no exception.',\n",
       " u'useful': 0,\n",
       " u'user_id': u'TlvV-xJhmh7LCwJYXkV-cg'}"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[10]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Long Text with positive Reviews, easily recognize as positive review\n",
    "Interesting to notice that the following text has keyword \"Bad\" but not listed by tf-idf. The review is positive though."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "coming love food taste every time delicious always either get panang pad thai fried rice larb chicken satay service always great think ever remember bad mediocre service food always come time giving star food price ratio match always end either ordering stopping somewhere later still hungry think either lower price add food opinion\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "{u'always': 0.262,\n",
       " u'come time': 0.159,\n",
       " u'either': 0.292,\n",
       " u'food': 0.177,\n",
       " u'lower price': 0.17,\n",
       " u'panang': 0.17,\n",
       " u'satay': 0.166,\n",
       " u'service always great': 0.167,\n",
       " u'still hungry': 0.168,\n",
       " u'think ever': 0.164}"
      ]
     },
     "execution_count": 133,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print corpus[101]\n",
    "tfidf_keyword(cleaned_corpus[101], X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{u'business_id': u'ixAh9crILnJ9tM8LhWFhkw',\n",
       " u'cool': 0,\n",
       " u'date': u'2017-04-05',\n",
       " u'funny': 0,\n",
       " u'review_id': u'Fv1cqziL1JShSztJWYkTcA',\n",
       " u'stars': 4,\n",
       " u'text': u\"I've been coming here for a while and I love how the food tastes the same every time. Delicious! I always either get the panang, pad thai, fried rice, larb, and/or chicken satay. Service is always great. I don't think I ever remember have bad or mediocre service here, and the food always comes out just in time. I'm giving it 4 stars because the food to price ratio doesn't match to me. I always end up either ordering more or stopping by somewhere later because I'm still hungry. I think they should either lower the price or add more food. Just my opinion.\",\n",
       " u'useful': 0,\n",
       " u'user_id': u'Yy_iGXxLpL6tYDQoE-6XVg'}"
      ]
     },
     "execution_count": 129,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[101]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Long Text with negative Reviews\n",
    "But a bit hard to tell if it's negative/positive, only words \"medicore\" \"suffer\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "girlfriend recommended place u went made sure appetite got sushi mediocre made terrible service half hour order took min come whether appetizer sushi server excuse bar full telling main dining area actually pretty full suffer bar full someone replied comment saying come monday busy umm come different day get even mediocre service thanks\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "{u'actually pretty': 0.182,\n",
       " u'bar': 0.176,\n",
       " u'come': 0.215,\n",
       " u'day get': 0.174,\n",
       " u'full': 0.288,\n",
       " u'mediocre': 0.254,\n",
       " u'order took': 0.185,\n",
       " u'recommended place': 0.181,\n",
       " u'suffer': 0.189,\n",
       " u'sushi': 0.213}"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print corpus[102]\n",
    "tfidf_keyword(cleaned_corpus[102], X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{u'business_id': u'aQ222ydz_GSRZV66xNt4kQ',\n",
       " u'cool': 0,\n",
       " u'date': u'2017-04-09',\n",
       " u'funny': 1,\n",
       " u'review_id': u'AxhxGl41DItKjqkzYtr53Q',\n",
       " u'stars': 1,\n",
       " u'text': u\"2 of my girlfriends recommended this place so all 3 of us went.... I made sure to have an appetite when I got here..... sushi was mediocre.... what made it TERRIBLE was the service..... we were there for 2 and a half hours because our orders took about 30 min to come out whether it was appetizers or sushi.... our server's excuse was because the bar was full....? So you're telling me your main dining area (which was actually also pretty full ) should SUFFER just because the bar was full????? \\n\\n**someone replied to this comment saying to come on a Monday when it's not busy... umm so I have to come a different day to get even mediocre service? No thanks...\",\n",
       " u'useful': 1,\n",
       " u'user_id': u'Yy_iGXxLpL6tYDQoE-6XVg'}"
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[102]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Get Review Texts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def get_yelp_df(path, sampling=False, top_user_num=6100, top_item_num=4000):\n",
    "    with open(path) as json_file:\n",
    "        data = json_file.readlines()\n",
    "        data = list(map(json.loads, data))\n",
    "\n",
    "    df = pd.DataFrame(data)\n",
    "    df.rename(columns={'stars': 'review_stars', 'cool': 'review_cool',\n",
    "                       'funny': 'review_funny', 'useful': 'review_useful'},\n",
    "              inplace=True)\n",
    "\n",
    "    df['business_num_id'] = df.business_id.astype('category').\\\n",
    "        cat.rename_categories(range(0, df.business_id.nunique()))\n",
    "    df['business_num_id'] = df['business_num_id'].astype('int')\n",
    "\n",
    "    df['user_num_id'] = df.user_id.astype('category').\\\n",
    "    cat.rename_categories(range(0, df.user_id.nunique()))\n",
    "    df['user_num_id'] = df['user_num_id'].astype('int')\n",
    "\n",
    "    df['timestamp'] = df['date'].apply(date_to_timestamp)\n",
    "\n",
    "    if sampling:\n",
    "        df = filter_yelp_df(df, top_user_num=top_user_num, top_item_num=top_item_num)\n",
    "\n",
    "    rating_matrix = df_to_sparse(df, row_name='user_num_id',\n",
    "                                 col_name='business_num_id',\n",
    "                                 value_name='review_stars',\n",
    "                                 shape=None)\n",
    "\n",
    "    timestamp_matrix = df_to_sparse(df, row_name='user_num_id',\n",
    "                                    col_name='business_num_id',\n",
    "                                    value_name='timestamp',\n",
    "                                    shape=None)\n",
    "\n",
    "    return rating_matrix, timestamp_matrix\n",
    "\n",
    "\n",
    "def df_to_sparse(df, row_name='userId', col_name='movieId', value_name='rating',\n",
    "                 shape=(138494, 131263)):\n",
    "    rows = df[row_name]\n",
    "    cols = df[col_name]\n",
    "    if value_name is not None:\n",
    "        values = df[value_name]\n",
    "    else:\n",
    "        values = [1]*len(rows)\n",
    "\n",
    "    return csr_matrix((values, (rows, cols)), shape=shape)\n",
    "\n",
    "\n",
    "def date_to_timestamp(date):\n",
    "    dt = datetime.datetime.strptime(date, '%Y-%m-%d')\n",
    "    return time.mktime(dt.timetuple())\n",
    "\n",
    "def get_yelp_review(path = 'data/', filename = 'data0.txt', sampling=False, drop_list = ['date','review_id','review_funny','review_cool','review_useful'], top_user_num=6100, top_item_num=4000):\n",
    "    with open(path+filename,'r') as f:\n",
    "        data = f.readlines()\n",
    "        data = list(map(json.loads, data))\n",
    "        \n",
    "    df = pd.DataFrame(data)\n",
    "    df.rename(columns={'stars': 'review_stars', 'text': 'review_text', 'cool': 'review_cool',\n",
    "                       'funny': 'review_funny', 'useful': 'review_useful'},\n",
    "              inplace=True)\n",
    "\n",
    "    df['business_num_id'] = df.business_id.astype('category').\\\n",
    "        cat.rename_categories(range(0, df.business_id.nunique()))\n",
    "    df['business_num_id'] = df['business_num_id'].astype('int')\n",
    "\n",
    "    df['user_num_id'] = df.user_id.astype('category').\\\n",
    "    cat.rename_categories(range(0, df.user_id.nunique()))\n",
    "    df['user_num_id'] = df['user_num_id'].astype('int')\n",
    "\n",
    "    df['timestamp'] = df['date'].apply(date_to_timestamp)\n",
    "\n",
    "    if sampling:\n",
    "        df = filter_yelp_df(df, top_user_num=top_user_num, top_item_num=top_item_num)\n",
    "    df = df.drop(drop_list, axis=1)\n",
    "        \n",
    "    return df \n",
    "\n",
    "\n",
    "def filter_yelp_df(df, top_user_num=6100, top_item_num=4000):\n",
    "    df_implicit = df[df['review_stars']>3]\n",
    "    frequent_user_id = df_implicit['user_num_id'].value_counts().head(top_user_num).index.values\n",
    "    frequent_item_id = df_implicit['business_num_id'].value_counts().head(top_item_num).index.values\n",
    "    return df.loc[(df['user_num_id'].isin(frequent_user_id)) & (df['business_num_id'].isin(frequent_item_id))]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df['business_num_id'] = df.business_id.astype('category').\\\n",
    "        cat.rename_categories(range(0, df.business_id.nunique()))\n",
    "df['business_num_id'] = df['business_num_id'].astype('int')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df['user_num_id'] = df.user_id.astype('category').\\\n",
    "    cat.rename_categories(range(0, df.user_id.nunique()))\n",
    "df['user_num_id'] = df['user_num_id'].astype('int')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df = get_yelp_review(path = '', sampling= True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3906"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.business_id.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5791"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.user_id.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df = df.reset_index(drop = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>business_id</th>\n",
       "      <th>review_stars</th>\n",
       "      <th>review_text</th>\n",
       "      <th>user_id</th>\n",
       "      <th>business_num_id</th>\n",
       "      <th>user_num_id</th>\n",
       "      <th>timestamp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>vsFFbN71ehRCp46KeR5RdQ</td>\n",
       "      <td>5</td>\n",
       "      <td>Fab.U.Lous. Best scrambles eggs. Fluffy and ta...</td>\n",
       "      <td>0pf5VuzE4_1pwj5NJHG5TQ</td>\n",
       "      <td>3660</td>\n",
       "      <td>172</td>\n",
       "      <td>1.478405e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Jj8ubiwwuCR-rrhrrjcryw</td>\n",
       "      <td>2</td>\n",
       "      <td>Been here 3x and no beef #45, will stop coming...</td>\n",
       "      <td>0pf5VuzE4_1pwj5NJHG5TQ</td>\n",
       "      <td>1254</td>\n",
       "      <td>172</td>\n",
       "      <td>1.471147e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>e9UsRb-fmza5ukU8Ftduew</td>\n",
       "      <td>2</td>\n",
       "      <td>Overall rating: 2.5 for a 4:30 weekday visit (...</td>\n",
       "      <td>0pf5VuzE4_1pwj5NJHG5TQ</td>\n",
       "      <td>2574</td>\n",
       "      <td>172</td>\n",
       "      <td>1.467432e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7m1Oa1VYV98UUuo_6i0EZg</td>\n",
       "      <td>5</td>\n",
       "      <td>Deeeeeeeeeeellllliiiissssshhhhhh!  More than a...</td>\n",
       "      <td>0pf5VuzE4_1pwj5NJHG5TQ</td>\n",
       "      <td>531</td>\n",
       "      <td>172</td>\n",
       "      <td>1.463890e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>szhJLmdLDVFTevm8fu0T4A</td>\n",
       "      <td>5</td>\n",
       "      <td>Best place for dim sum in the valley.  Prefer ...</td>\n",
       "      <td>0pf5VuzE4_1pwj5NJHG5TQ</td>\n",
       "      <td>3457</td>\n",
       "      <td>172</td>\n",
       "      <td>1.462075e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              business_id  review_stars  \\\n",
       "0  vsFFbN71ehRCp46KeR5RdQ             5   \n",
       "1  Jj8ubiwwuCR-rrhrrjcryw             2   \n",
       "2  e9UsRb-fmza5ukU8Ftduew             2   \n",
       "3  7m1Oa1VYV98UUuo_6i0EZg             5   \n",
       "4  szhJLmdLDVFTevm8fu0T4A             5   \n",
       "\n",
       "                                         review_text                 user_id  \\\n",
       "0  Fab.U.Lous. Best scrambles eggs. Fluffy and ta...  0pf5VuzE4_1pwj5NJHG5TQ   \n",
       "1  Been here 3x and no beef #45, will stop coming...  0pf5VuzE4_1pwj5NJHG5TQ   \n",
       "2  Overall rating: 2.5 for a 4:30 weekday visit (...  0pf5VuzE4_1pwj5NJHG5TQ   \n",
       "3  Deeeeeeeeeeellllliiiissssshhhhhh!  More than a...  0pf5VuzE4_1pwj5NJHG5TQ   \n",
       "4  Best place for dim sum in the valley.  Prefer ...  0pf5VuzE4_1pwj5NJHG5TQ   \n",
       "\n",
       "   business_num_id  user_num_id     timestamp  \n",
       "0             3660          172  1.478405e+09  \n",
       "1             1254          172  1.471147e+09  \n",
       "2             2574          172  1.467432e+09  \n",
       "3              531          172  1.463890e+09  \n",
       "4             3457          172  1.462075e+09  "
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "39620"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>review_stars</th>\n",
       "      <th>review_text</th>\n",
       "      <th>business_num_id</th>\n",
       "      <th>user_num_id</th>\n",
       "      <th>timestamp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>5</td>\n",
       "      <td>Fab.U.Lous. Best scrambles eggs. Fluffy and ta...</td>\n",
       "      <td>114037</td>\n",
       "      <td>7068</td>\n",
       "      <td>1.478405e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>2</td>\n",
       "      <td>Been here 3x and no beef #45, will stop coming...</td>\n",
       "      <td>39565</td>\n",
       "      <td>7068</td>\n",
       "      <td>1.471147e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>2</td>\n",
       "      <td>Overall rating: 2.5 for a 4:30 weekday visit (...</td>\n",
       "      <td>80611</td>\n",
       "      <td>7068</td>\n",
       "      <td>1.467432e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>5</td>\n",
       "      <td>Deeeeeeeeeeellllliiiissssshhhhhh!  More than a...</td>\n",
       "      <td>16623</td>\n",
       "      <td>7068</td>\n",
       "      <td>1.463890e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>5</td>\n",
       "      <td>Best place for dim sum in the valley.  Prefer ...</td>\n",
       "      <td>108531</td>\n",
       "      <td>7068</td>\n",
       "      <td>1.462075e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    review_stars                                        review_text  \\\n",
       "43             5  Fab.U.Lous. Best scrambles eggs. Fluffy and ta...   \n",
       "45             2  Been here 3x and no beef #45, will stop coming...   \n",
       "52             2  Overall rating: 2.5 for a 4:30 weekday visit (...   \n",
       "57             5  Deeeeeeeeeeellllliiiissssshhhhhh!  More than a...   \n",
       "70             5  Best place for dim sum in the valley.  Prefer ...   \n",
       "\n",
       "    business_num_id  user_num_id     timestamp  \n",
       "43           114037         7068  1.478405e+09  \n",
       "45            39565         7068  1.471147e+09  \n",
       "52            80611         7068  1.467432e+09  \n",
       "57            16623         7068  1.463890e+09  \n",
       "70           108531         7068  1.462075e+09  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df.to_pickle('original_df.pkl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>review_stars</th>\n",
       "      <th>review_text</th>\n",
       "      <th>business_num_id</th>\n",
       "      <th>user_num_id</th>\n",
       "      <th>timestamp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>The pizza was okay. Not the best I've had. I p...</td>\n",
       "      <td>88131</td>\n",
       "      <td>194917</td>\n",
       "      <td>1.298610e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5</td>\n",
       "      <td>I love this place! My fiance And I go here atl...</td>\n",
       "      <td>102571</td>\n",
       "      <td>194917</td>\n",
       "      <td>1.352783e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>Terrible. Dry corn bread. Rib tips were all fa...</td>\n",
       "      <td>91372</td>\n",
       "      <td>194917</td>\n",
       "      <td>1.414037e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>Back in 2005-2007 this place was my FAVORITE t...</td>\n",
       "      <td>81697</td>\n",
       "      <td>194917</td>\n",
       "      <td>1.298610e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Delicious healthy food. The steak is amazing. ...</td>\n",
       "      <td>60675</td>\n",
       "      <td>194917</td>\n",
       "      <td>1.409890e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   review_stars                                        review_text  \\\n",
       "0             2  The pizza was okay. Not the best I've had. I p...   \n",
       "1             5  I love this place! My fiance And I go here atl...   \n",
       "2             1  Terrible. Dry corn bread. Rib tips were all fa...   \n",
       "3             2  Back in 2005-2007 this place was my FAVORITE t...   \n",
       "4             5  Delicious healthy food. The steak is amazing. ...   \n",
       "\n",
       "   business_num_id  user_num_id     timestamp  \n",
       "0            88131       194917  1.298610e+09  \n",
       "1           102571       194917  1.352783e+09  \n",
       "2            91372       194917  1.414037e+09  \n",
       "3            81697       194917  1.298610e+09  \n",
       "4            60675       194917  1.409890e+09  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Count word for each text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "dataset = df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>review_text</th>\n",
       "      <th>word_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>The pizza was okay. Not the best I've had. I p...</td>\n",
       "      <td>87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>I love this place! My fiance And I go here atl...</td>\n",
       "      <td>58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Terrible. Dry corn bread. Rib tips were all fa...</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Back in 2005-2007 this place was my FAVORITE t...</td>\n",
       "      <td>185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Delicious healthy food. The steak is amazing. ...</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                         review_text  word_count\n",
       "0  The pizza was okay. Not the best I've had. I p...          87\n",
       "1  I love this place! My fiance And I go here atl...          58\n",
       "2  Terrible. Dry corn bread. Rib tips were all fa...          30\n",
       "3  Back in 2005-2007 this place was my FAVORITE t...         185\n",
       "4  Delicious healthy food. The steak is amazing. ...          30"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset['word_count'] = dataset['review_text'].apply(lambda x: len(x.encode('utf-8').split(\" \")))\n",
    "dataset[['review_text','word_count']].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    599699.000000\n",
       "mean        103.220747\n",
       "std         100.661793\n",
       "min           1.000000\n",
       "25%          40.000000\n",
       "50%          72.000000\n",
       "75%         129.000000\n",
       "max        1062.000000\n",
       "Name: word_count, dtype: float64"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.word_count.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#identify common words\n",
    "freq = pd.Series(' '.join(dataset['review_text']).split()).value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "the     2488720\n",
      "and     2088910\n",
      "I       1559389\n",
      "to      1514935\n",
      "a       1454285\n",
      "was     1041479\n",
      "of       830234\n",
      "is       721422\n",
      "for      699455\n",
      "in       635457\n",
      "my       511913\n",
      "The      509323\n",
      "it       502781\n",
      "that     478786\n",
      "with     476479\n",
      "on       391138\n",
      "have     384060\n",
      "but      379776\n",
      "you      361813\n",
      "they     358083\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print freq[:20]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BUSES                              1\n",
      "outside!!)                         1\n",
      "opposes                            1\n",
      "hungry..lolz..^_^                  1\n",
      "nursery/kids                       1\n",
      "GASTRO                             1\n",
      "Arugula...not                      1\n",
      "choppin'                           1\n",
      "fries..they                        1\n",
      "$1418                              1\n",
      "Eitherways                         1\n",
      "clue...that's                      1\n",
      "'Doubles                           1\n",
      "#13.                               1\n",
      "'go.'                              1\n",
      "#132                               1\n",
      "#130                               1\n",
      "#131                               1\n",
      "AGAST!                             1\n",
      "establishments....hmn...perhaps    1\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print freq[-20:]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Text pre-processing"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. Text clean up\n",
    "2. shrinking vocab to retain only the relevent\n",
    "3. reduce sparsity"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Normalization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('stemming:', u'invers')\n",
      "('lemmatization:', 'inversely')\n"
     ]
    }
   ],
   "source": [
    "#Stemming and Lemmatisation\n",
    "from nltk.stem.porter import PorterStemmer\n",
    "from nltk.stem.wordnet import WordNetLemmatizer\n",
    "lem = WordNetLemmatizer()\n",
    "stem = PorterStemmer()\n",
    "word = 'inversely'\n",
    "print ('stemming:', stem.stem(word))\n",
    "print ('lemmatization:', lem.lemmatize(word, \"v\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import re \n",
    "import nltk\n",
    "from nltk.corpus import stopwords\n",
    "from nltk.stem.porter import PorterStemmer\n",
    "from nltk.tokenize import RegexpTokenizer\n",
    "from nltk.stem.wordnet import WordNetLemmatizer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Create a list of stopwords and add custom stopwords\n",
    "stop_words = set(stopwords.words(\"english\"))\n",
    "# stop_words.remove('not')\n",
    "## A list of custom stopwords\n",
    "# new_words = ['using','show','result','large','also']\n",
    "# stop_words = stop_words.union(new_words)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Make all not to not_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(599699, 5)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(39620, 5)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# after compressing\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best place for dim sum in the valley.  Prefer this one to the one at Mekong Plaza in Mesa.  Pork siomai is the family favorite. Calamari is the bomb, when the cook isn't in (he gets in about 10-11am on weekends), we get the Salt and Pepper squid from the a la carte menu. Shrimp egg rolls, mmmmmmm.\n"
     ]
    }
   ],
   "source": [
    "t = df['review_text'][70]\n",
    "print t\n",
    "if 'not' in t:\n",
    "    print 'yes'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "u'thepizzawasokay notnot thenot bestnot venot ipreferbiaggio sonflamingo fortapache thecheftherecanmakeamuchbetternystylepizza thepizzeria cosmowasoverpricedforthequalityandlackofpersonalityinthefood biaggio sisamuchbetterpickifyouregoingforitalian familyowned homemaderecipes peoplethatactuallycareifyouliketheirfood youdontgetthatatapizzeriainacasino idontcarewhatyousay'"
      ]
     },
     "execution_count": 155,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "corpus[4]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "t1 = \"\".join(t)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "t = t.lower()\n",
    "t = t.encode(\"utf-8\").split()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>review_stars</th>\n",
       "      <th>review_text</th>\n",
       "      <th>business_num_id</th>\n",
       "      <th>user_num_id</th>\n",
       "      <th>timestamp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5</td>\n",
       "      <td>Fab.U.Lous. Best scrambles eggs. Fluffy and ta...</td>\n",
       "      <td>114037</td>\n",
       "      <td>7068</td>\n",
       "      <td>1.478405e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Been here 3x and no beef #45, will stop coming...</td>\n",
       "      <td>39565</td>\n",
       "      <td>7068</td>\n",
       "      <td>1.471147e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Overall rating: 2.5 for a 4:30 weekday visit (...</td>\n",
       "      <td>80611</td>\n",
       "      <td>7068</td>\n",
       "      <td>1.467432e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5</td>\n",
       "      <td>Deeeeeeeeeeellllliiiissssshhhhhh!  More than a...</td>\n",
       "      <td>16623</td>\n",
       "      <td>7068</td>\n",
       "      <td>1.463890e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Best place for dim sum in the valley.  Prefer ...</td>\n",
       "      <td>108531</td>\n",
       "      <td>7068</td>\n",
       "      <td>1.462075e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>3</td>\n",
       "      <td>First time here started off with no line, by t...</td>\n",
       "      <td>64224</td>\n",
       "      <td>7068</td>\n",
       "      <td>1.460347e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>3</td>\n",
       "      <td>Place is always packed for weekend dinners, ha...</td>\n",
       "      <td>83279</td>\n",
       "      <td>7068</td>\n",
       "      <td>1.457240e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>3</td>\n",
       "      <td>Bbq, bacon burger is awesome!  Salads are grea...</td>\n",
       "      <td>85799</td>\n",
       "      <td>7068</td>\n",
       "      <td>1.457240e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>4</td>\n",
       "      <td>I love how they have no rice sushi options. Th...</td>\n",
       "      <td>14999</td>\n",
       "      <td>138117</td>\n",
       "      <td>1.491624e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>3</td>\n",
       "      <td>I REALLY wanted to like this place. A lot of m...</td>\n",
       "      <td>1301</td>\n",
       "      <td>138117</td>\n",
       "      <td>1.490155e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>5</td>\n",
       "      <td>Had the ruby salad, carpaccio, salmon, and rav...</td>\n",
       "      <td>66330</td>\n",
       "      <td>138117</td>\n",
       "      <td>1.505621e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>5</td>\n",
       "      <td>I've been to a few ramen places in town and ca...</td>\n",
       "      <td>23299</td>\n",
       "      <td>138117</td>\n",
       "      <td>1.485752e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>5</td>\n",
       "      <td>I had an amazing time here. They were very bus...</td>\n",
       "      <td>16950</td>\n",
       "      <td>138117</td>\n",
       "      <td>1.491365e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>4</td>\n",
       "      <td>I've been coming here for a while and I love h...</td>\n",
       "      <td>89539</td>\n",
       "      <td>138117</td>\n",
       "      <td>1.491365e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>1</td>\n",
       "      <td>2 of my girlfriends recommended this place so ...</td>\n",
       "      <td>73450</td>\n",
       "      <td>138117</td>\n",
       "      <td>1.491710e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>3</td>\n",
       "      <td>The spicy wonton was my favorite. We ordered a...</td>\n",
       "      <td>38965</td>\n",
       "      <td>138117</td>\n",
       "      <td>1.485839e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>4</td>\n",
       "      <td>I have been itching to get to Origin for month...</td>\n",
       "      <td>88372</td>\n",
       "      <td>135455</td>\n",
       "      <td>1.320642e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>4</td>\n",
       "      <td>Can I get a Whopper? Not anymore...\\n\\nA forme...</td>\n",
       "      <td>25448</td>\n",
       "      <td>135455</td>\n",
       "      <td>1.301717e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>3</td>\n",
       "      <td>Joy Bistro is a beautiful, sophisticated resto...</td>\n",
       "      <td>60949</td>\n",
       "      <td>135455</td>\n",
       "      <td>1.291784e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>4</td>\n",
       "      <td>So lately I've been on a bit of an Italian kic...</td>\n",
       "      <td>57696</td>\n",
       "      <td>135455</td>\n",
       "      <td>1.319515e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>1</td>\n",
       "      <td>For those that don't know, O.Noir is that uniq...</td>\n",
       "      <td>110915</td>\n",
       "      <td>135455</td>\n",
       "      <td>1.300334e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>5</td>\n",
       "      <td>Utopia Cafe and Grill is aptly named. Let me t...</td>\n",
       "      <td>1248</td>\n",
       "      <td>135455</td>\n",
       "      <td>1.312517e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>5</td>\n",
       "      <td>Beautifully modern and discerning, Nota Bene p...</td>\n",
       "      <td>22212</td>\n",
       "      <td>135455</td>\n",
       "      <td>1.343362e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>3</td>\n",
       "      <td>I was here the other day for lunch and, as exp...</td>\n",
       "      <td>17813</td>\n",
       "      <td>135455</td>\n",
       "      <td>1.290748e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>4</td>\n",
       "      <td>Coquine Restaurant serves up an excellent week...</td>\n",
       "      <td>75077</td>\n",
       "      <td>135455</td>\n",
       "      <td>1.317614e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>5</td>\n",
       "      <td>As soon as you step inside, your first thought...</td>\n",
       "      <td>59581</td>\n",
       "      <td>135455</td>\n",
       "      <td>1.294808e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>4</td>\n",
       "      <td>I know St. Lawrence market is full of great fo...</td>\n",
       "      <td>53731</td>\n",
       "      <td>135455</td>\n",
       "      <td>1.319861e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>5</td>\n",
       "      <td>I came across The Burger's Priest purely by ac...</td>\n",
       "      <td>100091</td>\n",
       "      <td>135455</td>\n",
       "      <td>1.290661e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>3</td>\n",
       "      <td>Seriously? This restaurant has 4 crepe options...</td>\n",
       "      <td>28609</td>\n",
       "      <td>97726</td>\n",
       "      <td>1.359263e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>5</td>\n",
       "      <td>This has been a favorite for 13 years or more....</td>\n",
       "      <td>40545</td>\n",
       "      <td>97726</td>\n",
       "      <td>1.345522e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39590</th>\n",
       "      <td>5</td>\n",
       "      <td>Been here with my Love 2 times and both times ...</td>\n",
       "      <td>4009</td>\n",
       "      <td>41367</td>\n",
       "      <td>1.438056e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39591</th>\n",
       "      <td>5</td>\n",
       "      <td>This is the 2nd time my BF and I have ordered ...</td>\n",
       "      <td>34092</td>\n",
       "      <td>41367</td>\n",
       "      <td>1.439006e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39592</th>\n",
       "      <td>5</td>\n",
       "      <td>I made a same day appointment and Jolyn was ve...</td>\n",
       "      <td>29975</td>\n",
       "      <td>41367</td>\n",
       "      <td>1.464235e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39593</th>\n",
       "      <td>5</td>\n",
       "      <td>After looking at the reviews here on Yelp I de...</td>\n",
       "      <td>42915</td>\n",
       "      <td>41367</td>\n",
       "      <td>1.449464e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39594</th>\n",
       "      <td>5</td>\n",
       "      <td>My husband and I had dinner here this past Fri...</td>\n",
       "      <td>98763</td>\n",
       "      <td>41367</td>\n",
       "      <td>1.461470e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39595</th>\n",
       "      <td>5</td>\n",
       "      <td>The beef just melts in your mouth. So yummy. A...</td>\n",
       "      <td>52102</td>\n",
       "      <td>41367</td>\n",
       "      <td>1.438056e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39596</th>\n",
       "      <td>5</td>\n",
       "      <td>I've been going to Nailsense for a few years a...</td>\n",
       "      <td>11964</td>\n",
       "      <td>204966</td>\n",
       "      <td>1.462075e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39597</th>\n",
       "      <td>2</td>\n",
       "      <td>I'm not sure what the big deal is about this p...</td>\n",
       "      <td>97190</td>\n",
       "      <td>204966</td>\n",
       "      <td>1.462853e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39598</th>\n",
       "      <td>5</td>\n",
       "      <td>Omg this place is AMAZING!!!!!  Seriously wond...</td>\n",
       "      <td>47898</td>\n",
       "      <td>18439</td>\n",
       "      <td>1.486789e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39599</th>\n",
       "      <td>5</td>\n",
       "      <td>Amazing!  Pastries are incredible, coffee is g...</td>\n",
       "      <td>84485</td>\n",
       "      <td>18439</td>\n",
       "      <td>1.424581e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39600</th>\n",
       "      <td>3</td>\n",
       "      <td>I love the sushi here.  But I am starting to g...</td>\n",
       "      <td>100759</td>\n",
       "      <td>18439</td>\n",
       "      <td>1.507608e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39601</th>\n",
       "      <td>3</td>\n",
       "      <td>I came because of the pretty good reviews, but...</td>\n",
       "      <td>84424</td>\n",
       "      <td>66201</td>\n",
       "      <td>1.507176e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39602</th>\n",
       "      <td>4</td>\n",
       "      <td>The pizza was good, but the wait is terrible. ...</td>\n",
       "      <td>15851</td>\n",
       "      <td>66201</td>\n",
       "      <td>1.300507e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39603</th>\n",
       "      <td>5</td>\n",
       "      <td>I really like to go to Echo Coffee. It is a gr...</td>\n",
       "      <td>96799</td>\n",
       "      <td>66201</td>\n",
       "      <td>1.454130e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39604</th>\n",
       "      <td>4</td>\n",
       "      <td>I don't really expect really good Korean food ...</td>\n",
       "      <td>18133</td>\n",
       "      <td>66201</td>\n",
       "      <td>1.311653e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39605</th>\n",
       "      <td>3</td>\n",
       "      <td>I always just get one thing from Vietnamese pl...</td>\n",
       "      <td>25537</td>\n",
       "      <td>66201</td>\n",
       "      <td>1.300507e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39606</th>\n",
       "      <td>4</td>\n",
       "      <td>This is definitely a great place to go if you'...</td>\n",
       "      <td>109485</td>\n",
       "      <td>66201</td>\n",
       "      <td>1.300507e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39607</th>\n",
       "      <td>3</td>\n",
       "      <td>I ordered the porky and I'm not sure what it w...</td>\n",
       "      <td>100437</td>\n",
       "      <td>66201</td>\n",
       "      <td>1.311653e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39608</th>\n",
       "      <td>5</td>\n",
       "      <td>This is the best Thai place in the valley! I'v...</td>\n",
       "      <td>51299</td>\n",
       "      <td>66201</td>\n",
       "      <td>1.455340e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39609</th>\n",
       "      <td>2</td>\n",
       "      <td>Aaah, the familiar blast of air conditioning f...</td>\n",
       "      <td>39672</td>\n",
       "      <td>142840</td>\n",
       "      <td>1.173416e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39610</th>\n",
       "      <td>4</td>\n",
       "      <td>for now, it's my most fave hotel to shop in!  ...</td>\n",
       "      <td>108564</td>\n",
       "      <td>142840</td>\n",
       "      <td>1.145938e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39611</th>\n",
       "      <td>4</td>\n",
       "      <td>just from a \"tourist\"'s point of view...this i...</td>\n",
       "      <td>64875</td>\n",
       "      <td>142840</td>\n",
       "      <td>1.145938e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39612</th>\n",
       "      <td>4</td>\n",
       "      <td>Decor is a big thing for me!  Enter the circul...</td>\n",
       "      <td>28991</td>\n",
       "      <td>142840</td>\n",
       "      <td>1.145938e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39613</th>\n",
       "      <td>4</td>\n",
       "      <td>As far as Buffets in Vegas, they say this is t...</td>\n",
       "      <td>31144</td>\n",
       "      <td>142840</td>\n",
       "      <td>1.145938e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39614</th>\n",
       "      <td>2</td>\n",
       "      <td>waiters were snobs.\\n\\nmusic was horrible!--so...</td>\n",
       "      <td>105655</td>\n",
       "      <td>142840</td>\n",
       "      <td>1.145938e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39615</th>\n",
       "      <td>5</td>\n",
       "      <td>After having yummy coffee in Portland, Oregon ...</td>\n",
       "      <td>106368</td>\n",
       "      <td>109763</td>\n",
       "      <td>1.310011e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39616</th>\n",
       "      <td>4</td>\n",
       "      <td>This was a bit of a drive for me but well wort...</td>\n",
       "      <td>20941</td>\n",
       "      <td>109763</td>\n",
       "      <td>1.308974e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39617</th>\n",
       "      <td>5</td>\n",
       "      <td>What to say about In-N-Out? The best hamburger...</td>\n",
       "      <td>96844</td>\n",
       "      <td>109763</td>\n",
       "      <td>1.310011e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39618</th>\n",
       "      <td>5</td>\n",
       "      <td>I stopped in after 7pm and was greeted by the ...</td>\n",
       "      <td>66638</td>\n",
       "      <td>109763</td>\n",
       "      <td>1.309320e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39619</th>\n",
       "      <td>3</td>\n",
       "      <td>If you like lots of cream cheese and sauce thi...</td>\n",
       "      <td>111783</td>\n",
       "      <td>109763</td>\n",
       "      <td>1.308974e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>39620 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       review_stars                                        review_text  \\\n",
       "0                 5  Fab.U.Lous. Best scrambles eggs. Fluffy and ta...   \n",
       "1                 2  Been here 3x and no beef #45, will stop coming...   \n",
       "2                 2  Overall rating: 2.5 for a 4:30 weekday visit (...   \n",
       "3                 5  Deeeeeeeeeeellllliiiissssshhhhhh!  More than a...   \n",
       "4                 5  Best place for dim sum in the valley.  Prefer ...   \n",
       "5                 3  First time here started off with no line, by t...   \n",
       "6                 3  Place is always packed for weekend dinners, ha...   \n",
       "7                 3  Bbq, bacon burger is awesome!  Salads are grea...   \n",
       "8                 4  I love how they have no rice sushi options. Th...   \n",
       "9                 3  I REALLY wanted to like this place. A lot of m...   \n",
       "10                5  Had the ruby salad, carpaccio, salmon, and rav...   \n",
       "11                5  I've been to a few ramen places in town and ca...   \n",
       "12                5  I had an amazing time here. They were very bus...   \n",
       "13                4  I've been coming here for a while and I love h...   \n",
       "14                1  2 of my girlfriends recommended this place so ...   \n",
       "15                3  The spicy wonton was my favorite. We ordered a...   \n",
       "16                4  I have been itching to get to Origin for month...   \n",
       "17                4  Can I get a Whopper? Not anymore...\\n\\nA forme...   \n",
       "18                3  Joy Bistro is a beautiful, sophisticated resto...   \n",
       "19                4  So lately I've been on a bit of an Italian kic...   \n",
       "20                1  For those that don't know, O.Noir is that uniq...   \n",
       "21                5  Utopia Cafe and Grill is aptly named. Let me t...   \n",
       "22                5  Beautifully modern and discerning, Nota Bene p...   \n",
       "23                3  I was here the other day for lunch and, as exp...   \n",
       "24                4  Coquine Restaurant serves up an excellent week...   \n",
       "25                5  As soon as you step inside, your first thought...   \n",
       "26                4  I know St. Lawrence market is full of great fo...   \n",
       "27                5  I came across The Burger's Priest purely by ac...   \n",
       "28                3  Seriously? This restaurant has 4 crepe options...   \n",
       "29                5  This has been a favorite for 13 years or more....   \n",
       "...             ...                                                ...   \n",
       "39590             5  Been here with my Love 2 times and both times ...   \n",
       "39591             5  This is the 2nd time my BF and I have ordered ...   \n",
       "39592             5  I made a same day appointment and Jolyn was ve...   \n",
       "39593             5  After looking at the reviews here on Yelp I de...   \n",
       "39594             5  My husband and I had dinner here this past Fri...   \n",
       "39595             5  The beef just melts in your mouth. So yummy. A...   \n",
       "39596             5  I've been going to Nailsense for a few years a...   \n",
       "39597             2  I'm not sure what the big deal is about this p...   \n",
       "39598             5  Omg this place is AMAZING!!!!!  Seriously wond...   \n",
       "39599             5  Amazing!  Pastries are incredible, coffee is g...   \n",
       "39600             3  I love the sushi here.  But I am starting to g...   \n",
       "39601             3  I came because of the pretty good reviews, but...   \n",
       "39602             4  The pizza was good, but the wait is terrible. ...   \n",
       "39603             5  I really like to go to Echo Coffee. It is a gr...   \n",
       "39604             4  I don't really expect really good Korean food ...   \n",
       "39605             3  I always just get one thing from Vietnamese pl...   \n",
       "39606             4  This is definitely a great place to go if you'...   \n",
       "39607             3  I ordered the porky and I'm not sure what it w...   \n",
       "39608             5  This is the best Thai place in the valley! I'v...   \n",
       "39609             2  Aaah, the familiar blast of air conditioning f...   \n",
       "39610             4  for now, it's my most fave hotel to shop in!  ...   \n",
       "39611             4  just from a \"tourist\"'s point of view...this i...   \n",
       "39612             4  Decor is a big thing for me!  Enter the circul...   \n",
       "39613             4  As far as Buffets in Vegas, they say this is t...   \n",
       "39614             2  waiters were snobs.\\n\\nmusic was horrible!--so...   \n",
       "39615             5  After having yummy coffee in Portland, Oregon ...   \n",
       "39616             4  This was a bit of a drive for me but well wort...   \n",
       "39617             5  What to say about In-N-Out? The best hamburger...   \n",
       "39618             5  I stopped in after 7pm and was greeted by the ...   \n",
       "39619             3  If you like lots of cream cheese and sauce thi...   \n",
       "\n",
       "       business_num_id  user_num_id     timestamp  \n",
       "0               114037         7068  1.478405e+09  \n",
       "1                39565         7068  1.471147e+09  \n",
       "2                80611         7068  1.467432e+09  \n",
       "3                16623         7068  1.463890e+09  \n",
       "4               108531         7068  1.462075e+09  \n",
       "5                64224         7068  1.460347e+09  \n",
       "6                83279         7068  1.457240e+09  \n",
       "7                85799         7068  1.457240e+09  \n",
       "8                14999       138117  1.491624e+09  \n",
       "9                 1301       138117  1.490155e+09  \n",
       "10               66330       138117  1.505621e+09  \n",
       "11               23299       138117  1.485752e+09  \n",
       "12               16950       138117  1.491365e+09  \n",
       "13               89539       138117  1.491365e+09  \n",
       "14               73450       138117  1.491710e+09  \n",
       "15               38965       138117  1.485839e+09  \n",
       "16               88372       135455  1.320642e+09  \n",
       "17               25448       135455  1.301717e+09  \n",
       "18               60949       135455  1.291784e+09  \n",
       "19               57696       135455  1.319515e+09  \n",
       "20              110915       135455  1.300334e+09  \n",
       "21                1248       135455  1.312517e+09  \n",
       "22               22212       135455  1.343362e+09  \n",
       "23               17813       135455  1.290748e+09  \n",
       "24               75077       135455  1.317614e+09  \n",
       "25               59581       135455  1.294808e+09  \n",
       "26               53731       135455  1.319861e+09  \n",
       "27              100091       135455  1.290661e+09  \n",
       "28               28609        97726  1.359263e+09  \n",
       "29               40545        97726  1.345522e+09  \n",
       "...                ...          ...           ...  \n",
       "39590             4009        41367  1.438056e+09  \n",
       "39591            34092        41367  1.439006e+09  \n",
       "39592            29975        41367  1.464235e+09  \n",
       "39593            42915        41367  1.449464e+09  \n",
       "39594            98763        41367  1.461470e+09  \n",
       "39595            52102        41367  1.438056e+09  \n",
       "39596            11964       204966  1.462075e+09  \n",
       "39597            97190       204966  1.462853e+09  \n",
       "39598            47898        18439  1.486789e+09  \n",
       "39599            84485        18439  1.424581e+09  \n",
       "39600           100759        18439  1.507608e+09  \n",
       "39601            84424        66201  1.507176e+09  \n",
       "39602            15851        66201  1.300507e+09  \n",
       "39603            96799        66201  1.454130e+09  \n",
       "39604            18133        66201  1.311653e+09  \n",
       "39605            25537        66201  1.300507e+09  \n",
       "39606           109485        66201  1.300507e+09  \n",
       "39607           100437        66201  1.311653e+09  \n",
       "39608            51299        66201  1.455340e+09  \n",
       "39609            39672       142840  1.173416e+09  \n",
       "39610           108564       142840  1.145938e+09  \n",
       "39611            64875       142840  1.145938e+09  \n",
       "39612            28991       142840  1.145938e+09  \n",
       "39613            31144       142840  1.145938e+09  \n",
       "39614           105655       142840  1.145938e+09  \n",
       "39615           106368       109763  1.310011e+09  \n",
       "39616            20941       109763  1.308974e+09  \n",
       "39617            96844       109763  1.310011e+09  \n",
       "39618            66638       109763  1.309320e+09  \n",
       "39619           111783       109763  1.308974e+09  \n",
       "\n",
       "[39620 rows x 5 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from tqdm import tqdm\n",
    "def preprocess(df, reset_list = [',','.','?',';','however','but']):\n",
    "    corpus = []\n",
    "    for i in tqdm(range(df.shape[0])):\n",
    "        text = df['review_text'][i]\n",
    "        change_flg = 0\n",
    "        #Convert to lowercase\n",
    "        text = text.lower()\n",
    "        \n",
    "        ##Convert to list from string\n",
    "        text = text.split()\n",
    "        for j in range(len(text)):\n",
    "            #Make the not_ hack\n",
    "            if text[j] == 'not':\n",
    "                change_flg = 1\n",
    "#                 print 'changes is made after ', i\n",
    "                continue\n",
    "            if change_flg == 1 and any(reset in text[j] for reset in reset_list):\n",
    "                text[j] = 'not_' + text[j]\n",
    "                change_flg = 0\n",
    "#                 print 'reset at ', i\n",
    "            if change_flg == 1:\n",
    "                text[j] = 'not_' + text[j]\n",
    "        \n",
    "        #Convert back to string\n",
    "        text = \" \".join(text)\n",
    "        \n",
    "        #Remove punctuations\n",
    "#         text = re.sub('[^a-zA-Z]', ' ', text)\n",
    "        \n",
    "        #remove tags\n",
    "        text=re.sub(\"&lt;/?.*?&gt;\",\" &lt;&gt; \",text)\n",
    "        \n",
    "        # remove special characters and digits\n",
    "        text=re.sub(\"(\\\\d|\\\\W)+\",\" \",text)\n",
    "        \n",
    "        ##Convert to list from string\n",
    "        text = text.split()\n",
    "        \n",
    "        ##Stemming\n",
    "        ps=PorterStemmer()\n",
    "        \n",
    "        #Lemmatisation\n",
    "        lem = WordNetLemmatizer()\n",
    "        text = [lem.lemmatize(word) for word in text if not word in  \n",
    "                stop_words] \n",
    "        text = \" \".join(text)\n",
    "        corpus.append(text)\n",
    "    return corpus"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Create a list of stopwords and add custom stopwords\n",
    "stop_words = set(stopwords.words(\"english\"))\n",
    "# stop_words.remove('not')\n",
    "## A list of custom stopwords\n",
    "# new_words = ['using','show','result','large','also']\n",
    "new_words = ['not_the']\n",
    "stop_words = stop_words.union(new_words)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 278,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "reset_list = [',','.','?',';','however','but']\n",
    "change_flg = 0\n",
    "\n",
    "text = df['review_text'][4]\n",
    "\n",
    "#Convert to lowercase\n",
    "text = text.lower()\n",
    "\n",
    "##Convert to list from string\n",
    "text = text.split()\n",
    "for j in range(len(text)):\n",
    "    #Make the not_ hack\n",
    "    if text[j] == 'not':\n",
    "        change_flg = 1\n",
    "#                 print 'changes is made after ', i\n",
    "        continue\n",
    "    if change_flg == 1 and any(reset in text[j] for reset in reset_list):\n",
    "        text[j] = 'not_' + text[j]\n",
    "        change_flg = 0\n",
    "#                 print 'reset at ', i\n",
    "    if change_flg == 1:\n",
    "        text[j] = 'not_' + text[j]\n",
    "#Convert back to string\n",
    "text = \" \".join(text)\n",
    "\n",
    "#Remove punctuations\n",
    "# text = re.sub('[^a-zA-Z]', ' ', text)\n",
    "\n",
    "#remove tags\n",
    "text=re.sub(\"&lt;/?.*?&gt;\",\" &lt;&gt; \",text)\n",
    "\n",
    "# remove special characters and digits\n",
    "text=re.sub(\"(\\\\d|\\\\W)+\",\" \",text)\n",
    "\n",
    "##Convert to list from string\n",
    "text = text.split()\n",
    "\n",
    "##Stemming\n",
    "ps=PorterStemmer()\n",
    "\n",
    "#Lemmatisation\n",
    "lem = WordNetLemmatizer()\n",
    "text = [lem.lemmatize(word) for word in text if not word in  \n",
    "        stop_words] \n",
    "text = \" \".join(text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "u'back place favorite thai place ever go alllll time never complaint started get known got busy service started suck portion size got cut half huge problem paying way le food last time went pork pad se ew tasted good finished plate still hungry used know manager would greet hello melissa nice see diet coke pad thai pad se ew day know still know disregard presence also asked new portion size answer great food not not worth not not money havent back year refuse pay dinner still hungry sorry pinkaow not not not not used not not'"
      ]
     },
     "execution_count": 169,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# with stemming and lemmatisation\n",
    "text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "u'back in this place was my favorite thai place ever i d go here alllll the time i never had any complaints once they started to get more known and got busy their service started to suck and their portion sizes got cut in half i have a huge problem with paying more for way less food the last time i went there i had the pork pad se ew and it tasted good but i finished my plate and was still hungry i used to know the manager here and she would greet me with a hello melissa nice to see you again diet coke pad thai or pad se ew now a days i know she still knows me but she disregards my presence also i had asked her what was up with the new portion sizes and she had no answer for me great food but not not worth not the not money i havent been back in over a year because i refuse to pay for dinner and still be hungry after sorry pinkaow you are not not what not you not used not to not be'"
      ]
     },
     "execution_count": 171,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# without lemmatisation\n",
    "text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "u'back in this place was my favorite thai place ever i d go here alllll the time i never had any complaints once they started to get more known and got busy their service started to suck and their portion sizes got cut in half i have a huge problem with paying more for way less food the last time i went there i had the pork pad se ew and it tasted good but i finished my plate and was still hungry i used to know the manager here and she would greet me with a hello melissa nice to see you again diet coke pad thai or pad se ew now a days i know she still knows me but she disregards my presence also i had asked her what was up with the new portion sizes and she had no answer for me great food but not not worth not the not money i havent been back in over a year because i refuse to pay for dinner and still be hungry after sorry pinkaow you are not not what not you not used not to not be'"
      ]
     },
     "execution_count": 173,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# without stemming and lemmatisation\n",
    "text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "u'back in this place was my favorite thai place ever i d go here alllll the time i never had any complaints once they started to get more known and got busy their service started to suck and their portion sizes got cut in half i have a huge problem with paying more for way less food the last time i went there i had the pork pad se ew and it tasted good but i finished my plate and was still hungry i used to know the manager here and she would greet me with a hello melissa nice to see you again diet coke pad thai or pad se ew now a days i know she still knows me but she disregards my presence also i had asked her what was up with the new portion sizes and she had no answer for me great food but not not worth not the not money i havent been back in over a year because i refuse to pay for dinner and still be hungry after sorry pinkaow you are not not what not you not used not to not be'"
      ]
     },
     "execution_count": 178,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# with stop words \"not\"\n",
    "text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "u'back place favorite thai place ever go alllll time never complaint started get known got busy service started suck portion size got cut half huge problem paying way le food last time went pork pad se ew tasted good finished plate still hungry used know manager would greet hello melissa nice see diet coke pad thai pad se ew day know still know disregard presence also asked new portion size answer great food not_worth not_the not_money havent back year refuse pay dinner still hungry sorry pinkaow not_what not_you not_used not_to not_be'"
      ]
     },
     "execution_count": 191,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# without remove puntuations but with all lemma and blabla\n",
    "text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "back place favorite thai place ever go alllll time never complaint started get known got busy service started suck portion size got cut half huge problem paying way le food last time went pork pad se ew tasted good finished plate still hungry used know manager would greet hello melissa nice see diet coke pad thai pad se ew day know still know disregard presence also asked new portion size answer great food not_worth not_the not_money havent back year refuse pay dinner still hungry sorry pinkaow not_what not_you not_used not_to not_be\n"
     ]
    }
   ],
   "source": [
    "print text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df_new_idx = df.reset_index(drop = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████████████████████████████████████████████████████████████████████| 39620/39620 [00:15<00:00, 2481.06it/s]\n"
     ]
    }
   ],
   "source": [
    "corpus = preprocess(df_new_idx)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>review_stars</th>\n",
       "      <th>review_text</th>\n",
       "      <th>business_num_id</th>\n",
       "      <th>user_num_id</th>\n",
       "      <th>timestamp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5</td>\n",
       "      <td>Fab.U.Lous. Best scrambles eggs. Fluffy and ta...</td>\n",
       "      <td>114037</td>\n",
       "      <td>7068</td>\n",
       "      <td>1.478405e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Been here 3x and no beef #45, will stop coming...</td>\n",
       "      <td>39565</td>\n",
       "      <td>7068</td>\n",
       "      <td>1.471147e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Overall rating: 2.5 for a 4:30 weekday visit (...</td>\n",
       "      <td>80611</td>\n",
       "      <td>7068</td>\n",
       "      <td>1.467432e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5</td>\n",
       "      <td>Deeeeeeeeeeellllliiiissssshhhhhh!  More than a...</td>\n",
       "      <td>16623</td>\n",
       "      <td>7068</td>\n",
       "      <td>1.463890e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Best place for dim sum in the valley.  Prefer ...</td>\n",
       "      <td>108531</td>\n",
       "      <td>7068</td>\n",
       "      <td>1.462075e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   review_stars                                        review_text  \\\n",
       "0             5  Fab.U.Lous. Best scrambles eggs. Fluffy and ta...   \n",
       "1             2  Been here 3x and no beef #45, will stop coming...   \n",
       "2             2  Overall rating: 2.5 for a 4:30 weekday visit (...   \n",
       "3             5  Deeeeeeeeeeellllliiiissssshhhhhh!  More than a...   \n",
       "4             5  Best place for dim sum in the valley.  Prefer ...   \n",
       "\n",
       "   business_num_id  user_num_id     timestamp  \n",
       "0           114037         7068  1.478405e+09  \n",
       "1            39565         7068  1.471147e+09  \n",
       "2            80611         7068  1.467432e+09  \n",
       "3            16623         7068  1.463890e+09  \n",
       "4           108531         7068  1.462075e+09  "
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_new_idx.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "u'back place favorite thai place ever go alllll time never complaint started get known got busy service started suck portion size got cut half huge problem paying way le food last time went pork pad se ew tasted good finished plate still hungry used know manager would greet hello melissa nice see diet coke pad thai pad se ew day know still know disregard presence also asked new portion size answer great food not_worth not_the not_money havent back year refuse pay dinner still hungry sorry pinkaow not_what not_you not_used not_to not_be'"
      ]
     },
     "execution_count": 203,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "corpus[3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 204,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Save corpus\n",
    "with open('cleaned_corpus0.txt', 'w') as f:\n",
    "    for item in corpus:\n",
    "        f.write(\"%s\\n\" % item)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Not_hack done"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Load Cleaned texts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Load Corpus\n",
    "with open('cleaned_corpus0.txt', 'r') as f:\n",
    "    corpus = f.read().splitlines() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'amazing time busy service great employee making team effort acknowledge every guest engaging ate bar feel gave u better experience first timer ordered item absolutely loved every single one fish entree oyster rockefeller favorite food came one time love wait long food busy night still come presentable taste amazing get chance try sushi coming back girlfriend saw post see soon'"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#View corpus item\n",
    "corpus[100]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Word cloud"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 242,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<wordcloud.wordcloud.WordCloud object at 0x000000008719E8D0>\n"
     ]
    },
    {
     "data": {
      "image/png": "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\nRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x98d83da0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Word cloud\n",
    "from os import path\n",
    "from PIL import Image\n",
    "from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n",
    "import matplotlib.pyplot as plt\n",
    "% matplotlib inline\n",
    "wordcloud = WordCloud(\n",
    "                          background_color='white',\n",
    "                          stopwords=stop_words,\n",
    "                          max_words=100,\n",
    "                          max_font_size=50, \n",
    "                          random_state=42\n",
    "                         ).generate(str(corpus))\n",
    "print(wordcloud)\n",
    "fig = plt.figure(1)\n",
    "plt.imshow(wordcloud)\n",
    "plt.axis('off')\n",
    "plt.show()\n",
    "fig.savefig(\"word2.png\", dpi=900)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Text Preparation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. Tokenize\n",
    "2. Vectorise\n",
    "\n",
    "Use Bag of Words Model, only considers the frequency and ignores the sequence"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Creating a vector of word counts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#As the first step of conversion, \n",
    "#we will use the CountVectoriser to tokenise the text and build a vocabulary of known words. \n",
    "#We first create a variable “cv” of the CountVectoriser class, \n",
    "#and then evoke the fit_transform function to learn and build the vocabulary.\n",
    "from sklearn.feature_extraction.text import CountVectorizer\n",
    "import re\n",
    "cv=CountVectorizer(max_df=0.9,stop_words=stop_words, max_features=3000, ngram_range=(1,1))\n",
    "X=cv.fit_transform(corpus)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 480,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "save_npz('U_R_matrix_6000features.npz', X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "X = load_npz('U_R_matrix.npz')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<599699x10000 sparse matrix of type '<type 'numpy.int64'>'\n",
       "\twith 27813970 stored elements in Compressed Sparse Row format>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. cv=CountVectorizer(max_df=0.8,stop_words=stop_words, max_features=10000, ngram_range=(1,3))\n",
    "2. max_df — When building the vocabulary ignore terms that have a document frequency strictly higher than the given threshold (corpus-specific stop words). This is to ensure that we only have words relevant to the context and not commonly used words.\n",
    "3. max_features — determines the number of columns in the matrix.\n",
    "4. n-gram range — we would want to look at a list of single words, two words (bi-grams) and three words (tri-gram) combinations."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[u'always fresh',\n",
       " u'andy',\n",
       " u'figure',\n",
       " u'balcony',\n",
       " u'gentleman',\n",
       " u'love staff',\n",
       " u'service nice',\n",
       " u'absolutely horrible',\n",
       " u'sushi bar',\n",
       " u'based']"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list(cv.vocabulary_.keys())[:10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "### Save\n",
    "with open('CountVectorize0.txt', 'w') as f:\n",
    "    for item in list(cv.vocabulary_.keys()):\n",
    "        f.write(\"%s\\n\" % item)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Visualize top N uni-grams, bi-grams & tri-grams"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Words"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 269,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#Most frequently occuring words\n",
    "def get_top_n_words(corpus, n=None):\n",
    "    vec = CountVectorizer().fit(corpus)\n",
    "    bag_of_words = vec.transform(corpus)\n",
    "    sum_words = bag_of_words.sum(axis=0) \n",
    "    words_freq = [(word, sum_words[0, idx]) for word, idx in      \n",
    "                   vec.vocabulary_.items()]\n",
    "    words_freq =sorted(words_freq, key = lambda x: x[1], \n",
    "                       reverse=True)\n",
    "    return words_freq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 247,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#Convert most freq words to dataframe for plotting bar plot\n",
    "top_words = get_top_n_words(corpus)\n",
    "top_df = pd.DataFrame(top_words)\n",
    "top_df.columns=[\"Word\", \"Freq\"]\n",
    "# Save pkl file\n",
    "# top_df.to_pickle('top_df.pkl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 253,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[(u'look', 44497),\n",
       " (u'find', 44216),\n",
       " (u'server', 44179),\n",
       " (u'sauce', 43852),\n",
       " (u'home', 43728),\n",
       " (u'last', 43601),\n",
       " (u'many', 43385),\n",
       " (u'area', 43006),\n",
       " (u'salad', 42946),\n",
       " (u'eat', 42923),\n",
       " (u'excellent', 42405),\n",
       " (u'not_i', 42190),\n",
       " (u'burger', 41815),\n",
       " (u'bad', 41754),\n",
       " (u'sure', 41449),\n",
       " (u'feel', 41271),\n",
       " (u'small', 40933),\n",
       " (u'awesome', 40819),\n",
       " (u'vega', 40768),\n",
       " (u'guy', 40716)]"
      ]
     },
     "execution_count": 253,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_words[100:120]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 254,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n6VIpJgIAAAD+vK6ZomG325WTk+P+2el0ytf3mvkICgAAAFCuXDNFo0WLFkpMTJQk7dixQ2FhYaWc\nCAAAAPjzumY+o1H4V6cOHDggl8ulN954Q7fccktpxwIAAAD+lK6ZogEAAACg7Lhmbp0CAAAAUHZQ\nNID/j4t7AAAA5lA0PMTpdJZ2hDKt8KC+LL1OFA1ci9LT0yWxfgNAWXTu3LnSjuBRFA1DXC6Xjh8/\nrn79+kmSfHzK1ktblg4yDh48qJUrV0oqG6+T0+nURx99pMmTJ0sqW69VWeXt16jw/SWJ78cpIZfL\npW3btmns2LFKT0+XxWJh3b5CQUFBaUcoF0p7vSmrv6ezZ8+WdoTfLTMzUxkZGZJK//frSWV533Ho\n0CF169ZNO3fuLO0okjx34rf0j/KuEU6nU9WqVVNmZqZmz54tqexsHAsKCmSxWEo7hntjVqdOHY0a\nNUpvvPGG+2xraXE6nfLx8dE999yjnTt36tixY6V2QHblm7wsXe0pVJjJ2+tTTk6OXn31VaWnpys/\nP9+rY5dHly5dksViUePGjdWwYUN9+eWXkrz7eyuL62+hw4cPS/rpi12l0st68ODBUhn3t7JYLO7X\nzJsKt8NWq1X5+fll7sB+1qxZ2r9/v/vn8nLAfunSJe3fv18rV65UWlpamX6v/lE5OTkaOXKkUlNT\ndf78+dKOI0lKTU3V9OnTtX//ft1111269dZbS3W/Vrje+vj4eCQHRcOQwh3WnXfeqffff1+5ubmy\nWq1lYsNjtVp17tw5LVmyRKmpqV4vQIWvgcVikdPpVG5ururUqaO1a9eqZs2aXs1ypcIrKvv375fL\n5dKsWbMkef9AujBLbm6uNm7cKJfLVSau9lypMNPnn3+ud999V1u3bvXYWIXrjcvlkt1ul8ViUVRU\nlPbs2VMm3leF0tLSykz52b17tyS5v6x0+fLl+u6777R9+3bt2rVLkvcOhgrXlT179ig1NdU9vbR/\nd999951Gjx6tnTt3yuVyady4cTpw4IBXM2RkZGjYsGF69dVXNWbMGC1cuFBS2Shnubm5yszMLDLN\n5XJpypQp2rx5s1ezFG6HFy1apJ49e2rkyJGaPn26VzNc6fL9Z0hIiGJiYjRp0qRSTFRyheuXr6+v\nDh8+rClTpmjhwoWyWq0eW/dSU1M1ZcoUrV271iPP/0su38bY7Xb5+fnpwQcf1DfffOO1DL8mLy9P\n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\nZ44aNGigpUuX6sCBA8rNzTV+1t7pdGrMmDFKTk7WM888o+PHj2vjxo3y9fXVnXfeqf/+979avXq1\noqOjFRAQYHTskrh48aKsVqsqV66sKVOmKC4uTtu2bZO/v79iYmJ06tQpLVy4UDfffLOsVquaNm1q\ndPzCKxa33367LBaL3nvvPU2fPl1+fn4KCQnRiRMnlJGRIX9/f4WEhCgpKUkNGjRQo0aNjOb4JYXb\n60LffPONxowZo+HDh6tixYq6dOmSbrnlFqWlpWnp0qXy9/f36jbp11x5S8zp06c1btw4nThxQtOn\nT9fFixf10UcfKTY2VpmZmVq4cKHS0tLUpEkT+fv7/+5xN2/erClTpujChQuy2+0KDAzU4cOH1bJl\nS916663617/+pWPHjumOO+4wspzSz/cdGRkZWrVqlWw2m8aMGSO73a5Ro0bp+eef19q1a7Vs2TLl\n5+ercePGxjIUpzBbenq6PvnkE504cUI9e/ZUxYoVlZ2draZNmyo3N1dbtmxRrVq1PHZlY8OGDdq5\nc6caNGggi8WiGTNm6N1335WPj4/8/Px09OhRrVixQi1atFB8fLx27twpu92uunXr/uFjWIpGCVy6\ndKnIxiY9PV0vvPCC2rZtq4YNG2rLli367rvvdNNNN2n9+vU6cOCAMjMzdffddys8PNyj2a7cEJ46\ndUpjx45V586d9Ze//EUVKlTQzTffrK+++krx8fHatWuXvvjiC91xxx268cYbjeW4/M0uSTNnztSK\nFSt0+vRp3XXXXUpLS9OMGTPUvHlzVaxYUWvWrFHVqlX1+OOPKyoqyn1Qa9KVlwZzcnI0fvx4BQYG\n6umnn9amTZvk6+urjIwMpaena/PmzUpMTNSDDz6ozp07e+QA38fHR06nU2lpaZo8ebJuuOEGff75\n56pUqZJuvfVWrVq1SnPmzNHWrVv1+eefq3379n/oAP63On/+vM6dO6dGjRrJarVqz549WrJkiT79\n9FO1adNGN998s/tMSOHZjwoVKqht27ay2Wy/e9zC39Pq1as1duxYvfnmm7JYLKpZs6Y++ugj1a1b\nV7feeqtq166t22+/XTk5OerSpcsf2in+Ftu3b9c///lPbd++Xampqbpw4YJuuOEGrV27VjNmzJDV\natXSpUvVrFkzXX/99V7JdOW6PWrUKNWpU0f169fX3LlzNWTIEM2ZM0fbt2/XnDlz9Je//EX9+/f/\nQ7+nQidPntT06dP17bff6oEHHtDWrVuVmZmpGjVq6NChQ+rSpYvq1q2rmTNnqkePHoqKinKvK57e\nJko/3y6eOHFC48ePV//+/fXkk0+qbt26CgwM1MWLF9WqVSs9++yzysrKUqVKlYx/bsxisSgxMVFR\nUVFq3ry5mjVrpnnz5ik/P1/79u3TsmXL9Nhjj6lZs2ZGx72awtfIarXq0qVLCg0N1fbt2/Xdd9+p\ne/fuWrJkiWrXrq377rtPTqdTy5cvl8vlUocOHX62bf0j49tsNk2fPl0NGzaUy+XS4sWLNWjQIAUE\nBGjHjh26+eabdeHCBSUmJmrmzJmqUKGCevXqZWQ9vprCq94bN25UjRo13J9xPHPmjD777DNlZWVp\n9+7dGjhwoFauXKmqVat67QC2OIX74p07d+rgwYOqUqWKjh49qu+//14PPvigwsPDNXfuXNlsNj38\n8MOSpDZt2igkJOR3j5mYmKhPPvlEvXv31rZt2/T999+rdu3aysnJUVZWlurXr6+mTZsqODjY6Hvs\nyn3HuHHjJEkvvPCC7Ha7QkJCtHv3blWvXl1dunSR1WpVly5ddN111xnLcKXDhw/r4MGDql69ui5d\nuqQ5c+ZoxowZaty4sT777DPVrFlTERER2rhxo6xWqzp06KDExEQ1adLE6HGZ9L/32U033aTGjRvr\n/PnzstlsWr58ufr06aMePXq4T65kZWUpICBA7777rgoKChQTE2NkH0vRKMb27dtVvXp19w4rOztb\n/v7+Sk5OVnZ2tgYOHKhatWq522r37t116tQpZWdna9CgQWrVqpXHMxZm27Fjh4KDg5Wdna3Zs2dr\nxIgRqlKlijIyMnTmzBl16tRJX331lU6dOqUxY8YYPbC//MyqJL3++us6d+6c+vfvr1deeUXBwcGq\nW7eutm7dqpiYGC1YsECNGzdW+/btFRQUJF9f358dGJjIVPh8Bw8eVKVKleRyuTRnzhz1799fNWvW\nlN1u16ZNm9SrVy/Vq1dP33//vf72t7+pbdu28vX1/dly/R4pKSk6fvy4brrpJkk/bQxfeukl7dmz\nR7fccouee+45ValSRR988IGGDx+uEydOaPHixTp37pxGjBjh1fs2pZ8u6/r7+2vr1q3avHmzbr75\nZiUmJuqRRx6RzWbTihUrdOrUKcXExGjnzp3q2LGjYmNj//BO/8qzvhkZGdqwYYN+/PFHTZw4UfXr\n19fs2bPVpEkT1atXT7fffrv8/f2N/I6Kc+bMGa1YsUKffPKJevbsqX/84x/KyMjQsWPHdPvtt7uv\nbGzYsEHPPfec6tev77EshZ8vKlzezMxMLViwQFarVaGhoapUqZJmz56tl156SZ9++qmqV6+uQYMG\nyWq16oEHHtA999xj7EpGWlqakpOTddttt8nhcOihhx7S0KFDdeHCBe3du1fVqlVTgwYNVLt2be3e\nvVsffPCBunfvrkcffdTI+FdTeIC4fPlyVatWTQUFBUpOTlbHjh0VHBysM2fOaNy4cerUqZNWrVql\n9u3bKzw83CN/nKLwQLVSpUqqV6+err/+eq1evVq33HKLhg0bpqioKIWFhRkf92oKt49z5szRp59+\nKpfLpSeffFIjRoxQt27dlJOTo3379qlu3bpq1qyZmjdvrn/961964IEH/vBJGKfT6V4Xr7vuOqWm\npurIkSOqUaOGzp8/r127dun7779X9erVtWfPHvXq1Uvh4eG6++679eijj3q0ZFy+L/ryyy81bNgw\nnTlzRmlpafL19dWjjz6qU6dOaciQIdq/f7/sdruaN2+uzp0767bbbvNYrqu5vPw5HA4NHz5cq1at\n0rfffquCggK1bNlSP/zwg3JychQWFqYqVaro008/Vbdu3dSwYUPdcMMNv2u8wlvcEhMT1aFDB50/\nf16ff/65br31VoWFhSkrK0uHDx9W8+bNVbVqVePvsV+6YpiYmFjkiuHatWv10EMPKSQkRLfddpuu\nu+46j+w7Cl8Tp9Opv//976pSpYpCQkKUkpKiqKgo3Xrrrdq9e7fWrVunvn37Ki0tTSkpKYqIiFCH\nDh3cxwkm8xS+z86ePatly5bpX//6l2rXrq0NGzaodevWuvHGG5WXl6elS5fqiSeeUNWqVRUZGake\nPXoYe59RNH5Bfn6+4uPjtW3bNnXp0kW7du3SK6+8oq1btyo5OVl//etflZCQoPvuu08VK1bU+vXr\n5e/vr44dO6pFixa68847PdaWCzfAoaGhkn66X3TUqFHasGGDUlJS1LBhQ2VlZSk9PV3h4eHauHGj\n9uzZox49eqhVq1Zq3769bDabkQP7yz/zcOrUKb355puqV6+eDh48qJYtWyopKUmnT5/WpUuX1LVr\nVy1cuFD//ve/FRUVpccff7zIbQKmSsbltyZlZGRowoQJWrRokVJSUpSenq6GDRtq586duv322+Vy\n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\nSg7I+etlAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x33097ba8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Barplot of most freq words\n",
    "import seaborn as sns\n",
    "sns.set(rc={'figure.figsize':(13,8)})\n",
    "g = sns.barplot(x=\"Word\", y=\"Freq\", data=top_df[:20])\n",
    "g.set_xticklabels(g.get_xticklabels(), rotation=30)\n",
    "g.figure.savefig(\"top_word_new.png\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Bi-grams"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#Most frequently occuring Bi-grams\n",
    "def get_top_n2_words(corpus, n=None):\n",
    "    vec1 = CountVectorizer(ngram_range=(2,2),  \n",
    "            max_features=2000).fit(corpus)\n",
    "    bag_of_words = vec1.transform(corpus)\n",
    "    sum_words = bag_of_words.sum(axis=0) \n",
    "    words_freq = [(word, sum_words[0, idx]) for word, idx in     \n",
    "                  vec1.vocabulary_.items()]\n",
    "    words_freq =sorted(words_freq, key = lambda x: x[1], \n",
    "                reverse=True)\n",
    "    return words_freq[:n]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "             Bi-gram   Freq\n",
      "0   customer service  35318\n",
      "1            go back  25759\n",
      "2   highly recommend  25412\n",
      "3         first time  25172\n",
      "4          come back  18876\n",
      "5      great service  15320\n",
      "6          food good  15277\n",
      "7        really good  15065\n",
      "8    would recommend  14006\n",
      "9         great food  13615\n",
      "10         make sure  13470\n",
      "11       great place  13429\n",
      "12           la vega  13315\n",
      "13       even though  13184\n",
      "14        every time  13160\n",
      "15        love place  12710\n",
      "16         next time  12337\n",
      "17        food great  12184\n",
      "18       pretty good  11873\n",
      "19         feel like  11725\n"
     ]
    }
   ],
   "source": [
    "top2_words = get_top_n2_words(corpus, n=20)\n",
    "top2_df = pd.DataFrame(top2_words)\n",
    "top2_df.columns=[\"Bi-gram\", \"Freq\"]\n",
    "# Save pkl file\n",
    "top_df.to_pickle('top2_df.pkl')\n",
    "print(top2_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nY0VHRyskJES33HKLPB6PcnNz9e233/o0V13VzF912NqQIUMUHR2tgQMH6oMPPlB2dna9nKfyr3/9\nS6WlpZo0aZKmTJmim2++WampqT79sIWqmZhTp07p3//+t06fPq3PP/9czzzzjJ5++mmdPn1an3zy\nic/yVKl53HJubq5atGihe++9V6dPn1bHjh2VnZ0tSfX6Iuz7j6mePXuqZ8+emjlzpgYPHiyn06n1\n69f71Ydh1Ly/zpo1SzfccIP27t2rwsJCOZ1O/eIXv1Djxo29OsP0/dvtqquuUufOnfXcc88pISFB\nTqfTp7fZj51H8s033ygpKUnjx4/Xddddp/fff98n53fU/PsUFhaqVatWioyM1IYNGzRq1Cht27ZN\nx48f93mZqDnz98c//lF//etfde+99+qmm27Szp07tWjRIr355ps+Px+v5u1ls9kUGRlZfR+6+eab\n5fF49Morr6ikpKRex606L7OyslJBQUFq0qSJAgICtGrVKk2aNEmHDx82er1IofChqoZ84sQJbd68\nWQEBAcrKytJvf/tbLViwQC1btlRWVtZFvUi2LKv6gTJq1ChlZGRo165d+vWvf63f//73crlcmjdv\nnp5++mlFR0d7ce/qT80H/zvvvKNdu3apT58+atq0qdLS0pSXl6eCggI98sgjF/UuUNW04vHjx/WP\nf/xDZ8+elcvlUmpqqkaNGqWysjItW7bMZ9PlNVX9HQ8fPqzJkyfrkUceUY8ePTR37lydOnVKgwYN\nUlpamrKyshrkMJGax1i/9NJLev/991VeXq61a9eqbdu2atGihZYsWaKrr7663v+Z1zwueNOmTcrP\nz1d8fLz27t2r119/XV9//bXOnDmjYcOG+fRdwarHs2VZ1VPFvXr10owZM7Rx40Zt375dR48e1fDh\nw3XVVVf5LFdd1TyH6MCBA2ratKmioqL0wAMPSJJcLpeaNWumm2++2egwzO+/0Kk696mqELdr1676\nmGFfqXr8jx8/XjabTYMHD9Zbb72l7t27KygoSGvWrFHXrl19lkf67naqeoHl8XjUsWNHFRcX6847\n71R8fLxGjRqlTz/9VMeOHavXMaseU9OnT9eyZcvUs2dPBQYGqmfPnnI6ndq2bZtSUlLUsWPHehv3\nUtR8vD3wwAOKj4/Xgw8+KKfTqeeff17Hjh1T9+7dde+99+qaa67xSoaq/01V7x4fP35crVq10siR\nIxUTE6Of/exneu2113w2w1Xzf+WcOXOUmZmpvn37atOmTXK73erSpYtee+01xcTEeP1FfM3nk6Ki\nIkVGRiokJETDhw/Xww8/rI4dO3rtDacLqbrfJCUlyWazqaCgQOPHj1fPnj11xx136OzZs2rfvr3x\n4eYmas6Y7N27VyUlJTp58qReeeUVWZalI0eOqLKyUiNGjKi3w8Qsy9LZs2cVEhKiwsJCLVq0SEFB\nQQoLC9OYMWN07733qmXLllq3bp3RURp8U7aPFRQUKDk5Wc2bN9fDDz+so0eP6pFHHtHIkSP1wQcf\n6JlnntG111570dt9+umnFRISoilTpkiS3nnnHbVo0UL//Oc/NXr0aLVv376e98Q7qp6Uqg6PKCgo\nkNPpVIsWLdS1a1dt2rRJhw4d0m9/+1v98pe/rPN2q6ZYjx8/rsTERJWWlioyMlIzZ85UWlqaWrZs\nqc8++0ypqakN9g+0rKxMiYmJGjx4sG699VaFhoZq//792rx5s1566SWtXLlSjRo18vnx3VW3nWVZ\nSkxMVEREhIYOHaqOHTvq5ZdfVmRkpNavX68RI0aof//+XslQdVyww+HQ/v37FR4ersTERC1atEjB\nwcG6/fbb9atf/corY18o17hx49SiRQtt2rRJkydPVmlpqVavXq2KigrFxcVp4MCBPs91IVWPs8LC\nQo0dO7b6Qw6mTZumv/zlL9q3b59cLpfmzJlj9HxUtf3KykotWbJEoaGhatu2rVasWKFu3bqpcePG\n+uSTT5SUlKSePXvW9+6dN095ebmWLl2q999/X5mZmQoJCdE///lPffjhhwoKCtKoUaN03XXXeT1P\nlarHVmVlpSZMmKA2bdpUF4r8/HzdeOONeu+993T//fdr0KBB9Tp2ZWWlHn/8cZ0+fVqfffaZpkyZ\nIqfTqZSUFAUHB2vcuHH1Pualqqys1LRp09SxY0etX79edrtdL730kmbPnq1Tp05p7ty5XntRWPN/\n0wMPPKAzZ87oq6++0ooVK/TPf/5Tn3/+uU6ePKl77rnHp495y7J0//33q3PnzoqJidHAgQO1efNm\nvfnmm2ratKl+8YtfeP25sep+XFhYqFGjRun6669X8+bN1atXL+Xk5KiiokL79u3TE0884dPHV81s\nWVlZ2rdvnx599FGlp6drw4YNKi8v15///Gc5HI5z1vVVpsrKSj388MPVJ2T3799fWVlZat++vbZu\n3aqpU6cqNja23sbNzMzUn/70J61Zs0Y7duzQ//7v/2r69Ok6fvy40tPTdeLECRUVFWn69OlGfycK\nhZdZlqWNGzfqhhtuUGVlpWbMmKGePXtq2LBhsixLn3/+uUJDQxUYGKgrrrhCrVq1qtN2v/+pCc8+\n+6xat26t+Ph4SdK8efOqp6394ZOLLoZlWXr++edlt9t1//33a926ddq2bZvCw8N1zz33yLIshYSE\n1Hl7Vf8IPB6PVq1apSZNmui2227T9OnTFRgYqMTERF155ZVyuVzVTyy+UpVN+u4QuMTERD311FNq\n3bq1PB6PHnroIf3lL3/R6dOnG+Rkto8++kjdunVTy5YtlZubq6VLl+rFF1+U9N33QLz88suaPXu2\njh075tVjdBcsWKCSkhKlpqZKkoYPH64777xTd911l88/YUr6zz+EhQsXqqSkRCkpKfr666+VlJSk\nRx55RL/4xS9UXl5+UfdTX3O5XPrjH/+o7t2764477tDzzz+vQ4cO6amnnlJoaKhKSkou6fFgWZbG\njh2r66+/XiEhIQoJCVGjRo0UERGh4uJiderUSTfeeGM97lHtiouL9fXXX8vlciknJ0eNGzdWfHy8\nmjdvrtOnTysgIKDBzp148skndcUVVygxMVGS9Oabb6p79+7atm2bOnfurOjo6Hp7sVO1nfT0dBUW\nFio1NVX5+fl69NFHNWnSJPXu3VuWZalVq1YNeqLq9/NK0sqVK7VmzRotWbJEkjR+/HiVlZXptdde\n05EjR9SyZUuvZKj5PL1u3Trt3r1bY8aM0euvv66srCy9/PLLat26tU6dOqUrrrjCKxlqqnmbHD16\nVM8884zS0tIkSdu3b9enn36qcePG+eTvV3XblJSUaM2aNTp79qyio6P1t7/9TeXl5UpISNCZM2fU\nuHFjRUZGejVLTd9/jXTw4EF99dVX+tvf/qaRI0dKkh599FE9//zz6t69u89y1TR79mxdccUVmjhx\not58803t3r1bY8eO1ZVXXqnjx4/r6quvrrexVqxYoaFDh2rmzJn68ssvNW7cOH300Uf6+c9/rn79\n+qmiokKNGjVSZWWl8Uw/hzx52TfffKPi4mKdPXtWAQEBKisrq36Bb7PZ9Je//EVnz55V586dL7pM\nWJaldevWqaioSF26dFFhYaH+9a9/adeuXcrNzdUVV1xx2ZSJmodHFBUVKScnR0eOHJFlWerXr586\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x2331fac50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Barplot of most freq Bi-grams\n",
    "import seaborn as sns\n",
    "sns.set(rc={'figure.figsize':(13,8)})\n",
    "h=sns.barplot(x=\"Bi-gram\", y=\"Freq\", data=top2_df)\n",
    "h.set_xticklabels(h.get_xticklabels(), rotation=45)\n",
    "h.figure.savefig(\"bi-grams.png\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Tri-grams"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#Most frequently occuring Tri-grams\n",
    "def get_top_n3_words(corpus, n=None):\n",
    "    vec1 = CountVectorizer(ngram_range=(3,3), \n",
    "           max_features=2000).fit(corpus)\n",
    "    bag_of_words = vec1.transform(corpus)\n",
    "    sum_words = bag_of_words.sum(axis=0) \n",
    "    words_freq = [(word, sum_words[0, idx]) for word, idx in     \n",
    "                  vec1.vocabulary_.items()]\n",
    "    words_freq =sorted(words_freq, key = lambda x: x[1], \n",
    "                reverse=True)\n",
    "    return words_freq[:n]\n",
    "\n",
    "def get_n3_freq(corpus, n=None):\n",
    "    vec1 = CountVectorizer(ngram_range=(3,3), \n",
    "           max_features=2000).fit(corpus)\n",
    "    bag_of_words = vec1.transform(corpus)\n",
    "    sum_words = bag_of_words.sum(axis=0) \n",
    "    words_freq = [(word, sum_words[0, idx]) for word, idx in     \n",
    "                  vec1.vocabulary_.items()]\n",
    "    words_freq =sorted(words_freq, key = lambda x: x[1], \n",
    "                reverse=True)\n",
    "    return words_freq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                      Tri-gram  Freq\n",
      "0       would highly recommend  5255\n",
      "1   would definitely recommend  3676\n",
      "2       great customer service  3674\n",
      "3           definitely go back  3114\n",
      "4                never go back  3082\n",
      "5         definitely come back  2818\n",
      "6                would go back  2689\n",
      "7                 wait go back  2592\n",
      "8           food great service  2496\n",
      "9       highly recommend place  2415\n",
      "10      definitely coming back  2261\n",
      "11            great food great  2127\n",
      "12       definitely going back  1959\n",
      "13      would recommend anyone  1890\n",
      "14       would recommend place  1871\n",
      "15           food good service  1804\n",
      "16            keep coming back  1786\n",
      "17      recommend place anyone  1742\n",
      "18            sweet potato fry  1736\n",
      "19               every time go  1721\n"
     ]
    }
   ],
   "source": [
    "top3_words = get_top_n3_words(cleaned_corpus, n=20)\n",
    "top3_df = pd.DataFrame(top3_words)\n",
    "top3_df.columns=[\"Tri-gram\", \"Freq\"]\n",
    "print(top3_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                           Tri-gram  Freq\n",
      "0            would highly recommend  5255\n",
      "1        would definitely recommend  3676\n",
      "2            great customer service  3674\n",
      "3                definitely go back  3114\n",
      "4                     never go back  3082\n",
      "5              definitely come back  2818\n",
      "6                     would go back  2689\n",
      "7                      wait go back  2592\n",
      "8                food great service  2496\n",
      "9            highly recommend place  2415\n",
      "10           definitely coming back  2261\n",
      "11                 great food great  2127\n",
      "12            definitely going back  1959\n",
      "13           would recommend anyone  1890\n",
      "14            would recommend place  1871\n",
      "15                food good service  1804\n",
      "16                 keep coming back  1786\n",
      "17           recommend place anyone  1742\n",
      "18                 sweet potato fry  1736\n",
      "19                    every time go  1721\n",
      "20                  would come back  1712\n",
      "21               service great food  1700\n",
      "22                go somewhere else  1598\n",
      "23                 go anywhere else  1509\n",
      "24                   make feel like  1482\n",
      "25                   love love love  1479\n",
      "26              would definitely go  1460\n",
      "27              great service great  1454\n",
      "28       excellent customer service  1387\n",
      "29                 food pretty good  1386\n",
      "...                             ...   ...\n",
      "1970       overall experience great   127\n",
      "1971        great service delicious   127\n",
      "1972              even though asked   127\n",
      "1973            try everything menu   127\n",
      "1974                  still go back   127\n",
      "1975                   la vega year   127\n",
      "1976              salty salty salty   127\n",
      "1977            first time ordering   127\n",
      "1978                back happy hour   127\n",
      "1979           atmosphere good food   127\n",
      "1980                 good ice cream   126\n",
      "1981               took time listen   126\n",
      "1982            general tao chicken   126\n",
      "1983       received many compliment   126\n",
      "1984              sat bar bartender   126\n",
      "1985                first time good   126\n",
      "1986                 time come vega   126\n",
      "1987                mac cheese side   126\n",
      "1988                  get five star   126\n",
      "1989  professional highly recommend   126\n",
      "1990                  made sure got   126\n",
      "1991              food great people   126\n",
      "1992                  brand new car   126\n",
      "1993       friend recommended place   126\n",
      "1994             really nice people   126\n",
      "1995           customer service got   126\n",
      "1996             great service love   126\n",
      "1997              place pretty much   126\n",
      "1998              great drink great   126\n",
      "1999                 best long time   126\n",
      "\n",
      "[2000 rows x 2 columns]\n"
     ]
    }
   ],
   "source": [
    "## Get word-frequency for tri-grams\n",
    "top3_freq = get_n3_freq(cleaned_corpus)\n",
    "top3freq_df = pd.DataFrame(top3_freq)\n",
    "top3freq_df.columns=[\"Tri-gram\", \"Freq\"]\n",
    "print(top3freq_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Save top3_freq\n",
    "file_name = 'top3freq_words.pkl'\n",
    "top3freq_df.to_pickle(file_name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Save top3_words\n",
    "file_name = 'top3_words.pkl'\n",
    "top3_df.to_pickle(file_name)\n",
    "# Load\n",
    "#df = pd.read_pickle(file_name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.text.Text at 0x1041a3780>,\n",
       " <matplotlib.text.Text at 0x1041a10b8>,\n",
       " <matplotlib.text.Text at 0x11b8a9b0>,\n",
       " <matplotlib.text.Text at 0x11b87048>,\n",
       " <matplotlib.text.Text at 0x11b876a0>,\n",
       " <matplotlib.text.Text at 0x11b87cf8>,\n",
       " <matplotlib.text.Text at 0xed05b390>,\n",
       " <matplotlib.text.Text at 0xed05b9e8>,\n",
       " <matplotlib.text.Text at 0xed070080>,\n",
       " <matplotlib.text.Text at 0xed0706d8>,\n",
       " <matplotlib.text.Text at 0xed070d30>,\n",
       " <matplotlib.text.Text at 0x137a703c8>,\n",
       " <matplotlib.text.Text at 0x137a70a20>,\n",
       " <matplotlib.text.Text at 0x137a800b8>,\n",
       " <matplotlib.text.Text at 0x137a80710>,\n",
       " <matplotlib.text.Text at 0x137a80d68>,\n",
       " <matplotlib.text.Text at 0x137a4c400>,\n",
       " <matplotlib.text.Text at 0x137a4ca58>,\n",
       " <matplotlib.text.Text at 0xed31a0f0>,\n",
       " <matplotlib.text.Text at 0xed31a748>]"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nzZo1at26tTw9PZ0mZOc/ob9w4YL27Nmjfv366e9//7tatWqlrKwsVa5c2W4Xjm7cpq9cuaLFixfr\n22+/1bBhw1S1alUtX75cTZs2lbu7u1Fb+c8pDh06pH379qlXr16aP3++HnzwQSUmJio0NNRhF6ty\ncnLyhsklJiaqefPmWrFihY4fP66OHTuqbNmy2rlzp2rXrq0KFSo4pKZbdWOv++HDh1WxYkV99NFH\neumll1S5cmVdvnxZISEht/S+tovJ06ZNy+t979ixo2bPnq3g4OAiu3D6Z27cJtesWaPRo0fLz89P\nFStW1O7du9WoUSOVKVPm5sthtypxS2z3C0hSWlqa7rjjDlWpUkXvvPOOJCk0NFRly5ZVtWrViu1g\nYhuTaftC1apVS1WqVNHvv/8uSXrooYeUlpamw4cPF0l7+Q+wf/vb3zRu3Dilp6erXr16SklJUVpa\nmt5++2116tSpSE7ebG0NHTpUY8aMUYUKFTR06FB5eXmpefPm6tevn2JjY1WrVq0iWLrr5ebmys3N\nTdnZ2RozZoxOnTqVt1N99NFHFRkZqalTp+rpp5+2S6C5XTk5OXn3NSxcuFDly5eXl5eXcnJy9OCD\nD6pv377q2rWrWrVqZTx0z7Y95OTkaMqUKVqyZIl69+6te+65Rx4eHpoyZYpiYmL0zjvvqHTp0nY5\nibGtp5ycHL322ms6ePCgKlWqJDc3Nz366KN6/PHHNWvWLL3wwgtFeqXRhC0s5+bm6p///Kd+//13\neXt7q0+fPgoPD9f999+vRYsWFftJ6o3yf/8nT56s5cuX69KlS/r5559VqVIllSlTRpMnT1bVqlXt\nejXcVsOLL76oTz75RGXLllXLli3Vtm1bhYaGqlu3bho3bpzuvvtu47Zs47OHDRumu+++W3Xq1NHS\npUu1adMmxcTEqGXLlnrqqaeKfRhs/u9BTEyM1q1bp7vvvlv169dX5cqV9eabb2rKlCkaM2aM/P39\nnSZQ5L+HIjMzU4GBgUpLS1Pr1q3VtWtXdevWTStWrNC5c+fs0n7+bfrtt9/WxIkTVapUKVWpUkVX\nrlyRxWLRhAkT9MADDxif6Ocf73/q1Cl5eHioTJky6t+/v+6//35169ZNO3bscMj9kDa2ZR82bJim\nTZumq1ev6t1331VQUJB8fX3VtWtXffTRRwoPD3dYTbci/32du3btknQtpM6YMUMNGjRQSEiIpk2b\n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\nnU3Dhg0ZOHCgwu/l35Cdk+Tm5nLixAlmzZqFi4sL2traLF26VNoITjL5trCw+MvcIdn36f79+9Iq\ncrt27eLEiRNkZ2cTFhYmTcpWNlUZx/Lwn11UyH5QO3fuTG5uLrGxsbz77rtYW1vz6tUrbty4QefO\nnaU75GpqajV6hHz79m1yc3MxNzenTp06XLlyBX19fdauXcvYsWMpLCyktLSUoUOHShPanJycqrXT\nInn43759GzMzMxwdHamsrOTw4cPUr1+fd955hxYtWsilM7Jsp+rHjx+TlJREbGwskydPJjk5meXL\nlzN69Gilxi/r6uqqXPMxZXcYl6VqFZZUhWx34Pz8fCoqKoiLi8PY2BgrKyvi4+Pp27evUqtj/RHJ\nZ2Xq1KlYWVkRFhaGg4MDZmZmvHz5EisrK0JDQ2nVqpXC7qEmk48l79OsWbOwsLDgwIEDFBUVMWPG\nDH766ScyMzPx9fVV+m6/qo37N1WTZVv/7h4WL16MiYmJtJrg/fv30dPTIzQ0VNohubpUadzL/u4L\nCwtJSUkhIiKClStXEhAQgLGxMb6+vtSrV4+7d++SkZGBp6enSnxuJGRPEUtKSqhbty6XL1/m/Pnz\nBAcHo6OjQ3R0NN26dftHYbeypx7p6ekEBQXRqlUrWrVqxcOHD7l58yZeXl41Em79tvlPLipkV6nT\npk1j3bp1LF68mJSUFDZt2kS3bt2ws7PDw8NDaeEc2dnZGBsbM2LECLZt24azszPq6upERUXh5ubG\nO++8Q2RkpNwaoMgeBZ49e5ZNmzZRt25dbGxssLe35/z581y9epUOHTpU+3r79++XVmXYtGkThoaG\nhIWFsXHjRmxsbNDT0+Pdd9+lefPmtar9vKKpUodxWcqecKmq/fv3U1hYyNy5c3F1deXVq1dUVVVJ\nE+5UKdTg9b43iYmJ9OvXj4YNG1JeXs62bdvo06cPPj4+CgtDVFby8erVq3ny5Alz5sxh0KBBzJ07\nl/z8fD7//HMaNGig9JA+VR33f6cmy7b+EclnWvK5zszMRFdXFw8PD9TU1IiPj5eWTpXne6wK4172\nd19eXo6uri7Lly/nq6++Ytq0afj6+jJv3jzatm2Lu7s7Ojo6tGzZEn19fYXf25uSLCgqKysZPXo0\nFy5c4MaNG3Tt2pWkpCTWrVvHrl27iIiIwM/P7x//+1988QXGxsaEhYWxcuVKEhMT0dbWpk+fPnTq\n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\nAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x117d5cd30>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Barplot of most freq Tri-grams\n",
    "import seaborn as sns\n",
    "sns.set(rc={'figure.figsize':(13,8)})\n",
    "j=sns.barplot(x=\"Tri-gram\", y=\"Freq\", data=top3_df)\n",
    "j.set_xticklabels(j.get_xticklabels(), rotation=45)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "j.figure.savefig(\"tri-grams.png\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## TF-IDF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from sklearn.feature_extraction.text import TfidfTransformer\n",
    "\n",
    "# cv=CountVectorizer(max_df=0.8,stop_words=stop_words, max_features=10000, ngram_range=(1,3))\n",
    "# X=cv.fit_transform(cleaned_corpus)\n",
    "\n",
    "tfidf_transformer=TfidfTransformer(smooth_idf=True,use_idf=True)\n",
    "tfidf_transformer.fit(X)\n",
    "# get feature names\n",
    "feature_names=cv.get_feature_names()\n",
    " \n",
    "# fetch document for which keywords needs to be extracted\n",
    "doc=corpus[4]\n",
    " \n",
    "#generate tf-idf for the given document\n",
    "tf_idf_vector=tfidf_transformer.transform(cv.transform([doc]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Abstract:\n",
      "best place dim sum valley prefer one one mekong plaza mesa pork siomai family favorite calamari bomb cook get weekend get salt pepper squid la carte menu shrimp egg roll mmmmmmm\n",
      "\n",
      "Keywords:\n",
      "(u'mesa', 0.27)\n",
      "(u'plaza', 0.273)\n",
      "(u'squid', 0.264)\n",
      "(u'sum', 0.236)\n",
      "(u'carte', 0.264)\n"
     ]
    }
   ],
   "source": [
    "#Function for sorting tf_idf in descending order\n",
    "from scipy.sparse import coo_matrix\n",
    "def sort_coo(coo_matrix):\n",
    "    tuples = zip(coo_matrix.col, coo_matrix.data)\n",
    "    return sorted(tuples, key=lambda x: (x[1], x[0]), reverse=True)\n",
    " \n",
    "def extract_topn_from_vector(feature_names, sorted_items, topn=10):\n",
    "    \"\"\"get the feature names and tf-idf score of top n items\"\"\"\n",
    "    \n",
    "    #use only topn items from vector\n",
    "    sorted_items = sorted_items[:topn]\n",
    " \n",
    "    score_vals = []\n",
    "    feature_vals = []\n",
    "    \n",
    "    # word index and corresponding tf-idf score\n",
    "    for idx, score in sorted_items:\n",
    "        \n",
    "        #keep track of feature name and its corresponding score\n",
    "        score_vals.append(round(score, 3))\n",
    "        feature_vals.append(feature_names[idx])\n",
    " \n",
    "    #create a tuples of feature,score\n",
    "    #results = zip(feature_vals,score_vals)\n",
    "    results= {}\n",
    "    for idx in range(len(feature_vals)):\n",
    "        results[feature_vals[idx]]=score_vals[idx]\n",
    "    \n",
    "    return results\n",
    "#sort the tf-idf vectors by descending order of scores\n",
    "sorted_items=sort_coo(tf_idf_vector.tocoo())\n",
    "#extract only the top n; n here is 10\n",
    "keywords=extract_topn_from_vector(feature_names,sorted_items,5)\n",
    " \n",
    "# now print the results\n",
    "print(\"\\nAbstract:\")\n",
    "print(doc)\n",
    "print(\"\\nKeywords:\")\n",
    "for k in keywords:\n",
    "    print(k,keywords[k])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def generate_X(corpus):\n",
    "    cv=CountVectorizer(max_df=0.8,stop_words=stop_words, max_features=10000, ngram_range=(1,3))\n",
    "    X=cv.fit_transform(cleaned_corpus)\n",
    "    return X\n",
    "def tfidf_keyword(doc, X, top_n = 10):\n",
    "    tfidf_transformer=TfidfTransformer(smooth_idf=True,use_idf=True)\n",
    "    tfidf_transformer.fit(X)\n",
    "    # get feature names\n",
    "    feature_names=cv.get_feature_names()\n",
    " \n",
    "    # fetch document for which keywords needs to be extracted\n",
    "\n",
    "    #generate tf-idf for the given document\n",
    "    tf_idf_vector=tfidf_transformer.transform(cv.transform([doc]))\n",
    "    \n",
    "    #sort the tf-idf vectors by descending order of scores\n",
    "    sorted_items=sort_coo(tf_idf_vector.tocoo())\n",
    "    #extract only the top n; n here is 10\n",
    "    keywords=extract_topn_from_vector(feature_names,sorted_items,topn=top_n)\n",
    "\n",
    "    # now print the results\n",
    "#     print(\"\\nAbstract:\")\n",
    "#     print(doc)\n",
    "#     print(\"\\nKeywords:\")\n",
    "#     for k in keywords:\n",
    "#         print(k,keywords[k])\n",
    "        \n",
    "        \n",
    "    return keywords"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "emerald club member number year always satisfied vehicle customer service recent visit pittsburgh exception\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "{u'club': 0.257,\n",
       " u'exception': 0.322,\n",
       " u'member': 0.261,\n",
       " u'number': 0.239,\n",
       " u'pittsburgh': 0.286,\n",
       " u'recent': 0.29,\n",
       " u'recent visit': 0.368,\n",
       " u'satisfied': 0.259,\n",
       " u'vehicle': 0.273,\n",
       " u'year always': 0.33}"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print corpus[10]\n",
    "tfidf_keyword(cleaned_corpus[10], X)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
